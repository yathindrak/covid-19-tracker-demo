/**
 * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.com) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { AsgardeoSPAClient, AuthSPAClientConfig } from "@asgardeo/auth-spa";
export interface Credentials {
    client_id: string;
    client_secret?: string;
}
export interface STSConfig {
    credentials: Credentials;
    scope: string[];
    resource?: string;
    audience?: string;
    actor_token?: string;
    actor_token_type?: string;
    [x: string]: any;
}
export interface CustomAuthClientConfig {
    stsTokenEndpoint?: string;
    stsConfig?: STSConfig;
}
export declare type STSClientConfig = AuthSPAClientConfig & CustomAuthClientConfig;
/**
 * This class provides the methods to implement token exchange grant in a Single Page Application.
 *
 * @export
 * @class TokenExchangePlugin
 */
export declare class TokenExchangePlugin extends AsgardeoSPAClient {
    static getInstance(id?: string): AsgardeoSPAClient | undefined;
    initialize(config: STSClientConfig): Promise<boolean>;
    getIDPAccessToken(): Promise<string>;
}
//# sourceMappingURL=client.d.ts.map