!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).AsgardeoAuth={})}(this,(function(e){"use strict";function t(e,t,l,i){return new(l||(l=Promise))((function(n,d){function o(e){try{a(i.next(e))}catch(e){d(e)}}function c(e){try{a(i.throw(e))}catch(e){d(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof l?t:new l((function(e){e(t)}))).then(o,c)}a((i=i.apply(e,t||[])).next())}))}function l(e,t,l,i){return new(l||(l=Promise))((function(n,d){function o(e){try{a(i.next(e))}catch(e){d(e)}}function c(e){try{a(i.throw(e))}catch(e){d(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof l?t:new l((function(e){e(t)}))).then(o,c)}a((i=i.apply(e,t||[])).next())}))}e.ResponseMode=void 0,function(e){e.formPost="form_post",e.query="query"}(e.ResponseMode||(e.ResponseMode={}));e.Stores=void 0,function(e){e.ConfigData="config_data",e.OIDCProviderMetaData="oidc_provider_meta_data",e.SessionData="session_data",e.TemporaryData="temporary_data"}(e.Stores||(e.Stores={}));const i="refresh_token_timer",n=["RS256","RS512","RS384","PS256"],d="code",o="session_state",c="sign_out_url",a="sign_out_success",s="state";var Z;!function(e){e.Include="include",e.SameOrigin="same-origin",e.Omit="omit"}(Z||(Z={}));class r{constructor(e,t,l){this.message=l,this.name=t,this.code=e,Object.setPrototypeOf(this,new.target.prototype)}}class u{constructor(){}static filterClaimsFromIDTokenPayload(e){const t=Object.assign({},e);null==t||delete t.iss,null==t||delete t.aud,null==t||delete t.exp,null==t||delete t.iat,null==t||delete t.acr,null==t||delete t.amr,null==t||delete t.azp,null==t||delete t.auth_time,null==t||delete t.nonce,null==t||delete t.c_hash,null==t||delete t.at_hash,null==t||delete t.nbf,null==t||delete t.isk,null==t||delete t.sid;const l={};return Object.entries(t).forEach((([e,t])=>{const i=e.split("_").map(((e,t)=>0===t?e:[e[0].toUpperCase(),...e.slice(1)].join(""))).join("");l[i]=t})),l}static getTokenRequestHeaders(){return{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded"}}static generateStateParamForRequestCorrelation(e,t){const l=parseInt(e.split("#")[1]);return t?`${t}_request_${l}`:`request_${l}`}static extractPKCEKeyFromStateParam(e){return`pkce_code_verifier#${parseInt(e.split("request_")[1])}`}}u.getTenantDomainFromIdTokenPayload=(e,t="@")=>{const l=e.sub.split(t);return l.length>2?l[l.length-1]:""};class b{constructor(e,t){this._dataLayer=e,this._config=()=>l(this,void 0,void 0,(function*(){return yield this._dataLayer.getConfigData()})),this._oidcProviderMetaData=()=>l(this,void 0,void 0,(function*(){return yield this._dataLayer.getOIDCProviderMetaData()})),this._cryptoHelper=t}resolveEndpoints(e){return l(this,void 0,void 0,(function*(){const t={},l=yield this._config();return l.endpoints&&Object.keys(l.endpoints).forEach((e=>{const i=e.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));t[i]=(null==l?void 0:l.endpoints)?l.endpoints[e]:""})),Object.assign(Object.assign({},e),t)}))}resolveEndpointsExplicitly(){return l(this,void 0,void 0,(function*(){const e={},t=yield this._config(),l=["authorization_endpoint","end_session_endpoint","jwks_uri","check_session_iframe","revocation_endpoint","token_endpoint","issuer","userinfo_endpoint"];if(!t.endpoints||!Object.keys(null==t?void 0:t.endpoints).every((e=>{const t=e.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));return l.includes(t)})))throw new r("JS-AUTH_HELPER-REE-NF01","No required endpoints.","Required oidc endpoints are not defined");return t.endpoints&&Object.keys(t.endpoints).forEach((l=>{const i=l.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));e[i]=(null==t?void 0:t.endpoints)?t.endpoints[l]:""})),Object.assign({},e)}))}resolveEndpointsByBaseURL(){return l(this,void 0,void 0,(function*(){const e={},t=yield this._config(),l=t.baseUrl;if(!l)throw new r("JS-AUTH_HELPER_REBO-NF01","Base URL not defined.","Base URL is not defined in AuthClient config.");t.endpoints&&Object.keys(t.endpoints).forEach((l=>{const i=l.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));e[i]=(null==t?void 0:t.endpoints)?t.endpoints[l]:""}));const i={authorization_endpoint:`${l}/oauth2/authorize`,end_session_endpoint:`${l}/oidc/logout`,issuer:`${l}/oauth2/token`,jwks_uri:`${l}/oauth2/jwks`,check_session_iframe:`${l}/oidc/checksession`,revocation_endpoint:`${l}/oauth2/revoke`,token_endpoint:`${l}/oauth2/token`,userinfo_endpoint:`${l}/oauth2/userinfo`};return Object.assign(Object.assign({},i),e)}))}validateIdToken(e){return l(this,void 0,void 0,(function*(){const t=(yield this._dataLayer.getOIDCProviderMetaData()).jwks_uri,l=yield this._config();if(!t||0===t.trim().length)throw new r("JS_AUTH_HELPER-VIT-NF01","JWKS endpoint not found.","No JWKS endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the JWKS endpoint passed to the SDK is empty.");let i;try{i=yield fetch(t,{credentials:l.sendCookiesInRequests?Z.Include:Z.SameOrigin})}catch(t){throw new r("JS-AUTH_HELPER-VIT-NE02","Request to jwks endpoint failed.",null!=t?t:"The request sent to get the jwks from the server failed.")}if(200!==i.status||!i.ok)throw new r("JS-AUTH_HELPER-VIT-HE03",`Invalid response status received for jwks request (${i.statusText}).`,yield i.json());const n=(yield this._oidcProviderMetaData()).issuer,{keys:d}=yield i.json(),o=yield this._cryptoHelper.getJWKForTheIdToken(e.split(".")[0],d);return this._cryptoHelper.isValidIdToken(e,o,(yield this._config()).clientID,null!=n?n:"",this._cryptoHelper.decodeIDToken(e).sub,(yield this._config()).clockTolerance)}))}getAuthenticatedUserInfo(e){var t,l,i,n;const d=this._cryptoHelper.decodeIDToken(e),o=u.getTenantDomainFromIdTokenPayload(d),c=null!==(t=null==d?void 0:d.username)&&void 0!==t?t:"",a=null!==(l=d.given_name)&&void 0!==l?l:"",s=null!==(i=d.family_name)&&void 0!==i?i:"",Z=a&&s?`${a} ${s}`:a||s||"",r=null!==(n=d.preferred_username)&&void 0!==n?n:Z;return Object.assign({displayName:r,tenantDomain:o,username:c},u.filterClaimsFromIDTokenPayload(d))}replaceCustomGrantTemplateTags(e,t){var i;return l(this,void 0,void 0,(function*(){let l="openid";const n=yield this._config(),d=yield this._dataLayer.getSessionData(t);return n.scope&&n.scope.length>0&&(n.scope.includes("openid")||n.scope.push("openid"),l=n.scope.join(" ")),e.replace("{{token}}",d.access_token).replace("{{username}}",this.getAuthenticatedUserInfo(d.id_token).username).replace("{{scope}}",l).replace("{{clientID}}",n.clientID).replace("{{clientSecret}}",null!==(i=n.clientSecret)&&void 0!==i?i:"")}))}clearUserSessionData(e){return l(this,void 0,void 0,(function*(){yield this._dataLayer.removeTemporaryData(e),yield this._dataLayer.removeSessionData(e)}))}handleTokenResponse(e,t){return l(this,void 0,void 0,(function*(){if(200!==e.status||!e.ok)throw new r("JS-AUTH_HELPER-HTR-NE01",`Invalid response status received for token request (${e.statusText}).`,yield e.json());const i=yield e.json();if(i.created_at=(new Date).getTime(),(yield this._config()).validateIDToken)return this.validateIdToken(i.id_token).then((()=>l(this,void 0,void 0,(function*(){yield this._dataLayer.setSessionData(i,t);const e={accessToken:i.access_token,createdAt:i.created_at,expiresIn:i.expires_in,idToken:i.id_token,refreshToken:i.refresh_token,scope:i.scope,tokenType:i.token_type};return Promise.resolve(e)}))));{const e={accessToken:i.access_token,createdAt:i.created_at,expiresIn:i.expires_in,idToken:i.id_token,refreshToken:i.refresh_token,scope:i.scope,tokenType:i.token_type};return yield this._dataLayer.setSessionData(i,t),Promise.resolve(e)}}))}generatePKCEKey(e){var t;return l(this,void 0,void 0,(function*(){const l=yield this._dataLayer.getTemporaryData(e),i=[];Object.keys(l).forEach((e=>{e.startsWith("pkce_code_verifier")&&i.push(e)}));const n=i.sort().pop();return`pkce_code_verifier#${parseInt(null!==(t=null==n?void 0:n.split("#")[1])&&void 0!==t?t:"-1")+1}`}))}}class h{constructor(e){this._cryptoUtils=e}getCodeVerifier(){return this._cryptoUtils.base64URLEncode(this._cryptoUtils.generateRandomBytes(32))}getCodeChallenge(e){return this._cryptoUtils.base64URLEncode(this._cryptoUtils.hashSha256(e))}getJWKForTheIdToken(e,t){const l=JSON.parse(this._cryptoUtils.base64URLDecode(e));for(const e of t)if(l.kid===e.kid)return e;throw new r("JS-CRYPTO_UTIL-GJFTIT-IV01","kid not found.","Failed to find the 'kid' specified in the id_token. 'kid' found in the header : "+l.kid+", Expected values: "+t.map((e=>e.kid)).join(", "))}isValidIdToken(e,t,l,i,d,o){return this._cryptoUtils.verifyJwt(e,t,n,l,i,d,o).then((e=>e?Promise.resolve(!0):Promise.reject(new r("JS-CRYPTO_HELPER-IVIT-IV01","Invalid ID token.","ID token validation returned false")))).catch((e=>"ERR_JWT_CLAIM_VALIDATION_FAILED"===(null==e?void 0:e.code)&&"nbf"===(null==e?void 0:e.claim)?Promise.reject(new r("JS-CRYPTO_UTILS-IVIT-IV02","JWT NBF CLAIM VALIDATION FAILED","JWT NBF claim validation has been failed")):Promise.reject(new r("JS-CRYPTO_UTILS-IVIT-IV03","JWT VALIDATION FAILED","JWT validation has been failed"))))}decodeIDToken(e){try{const t=this._cryptoUtils.base64URLDecode(e.split(".")[1]);return JSON.parse(t)}catch(e){throw new r("JS-CRYPTO_UTIL-DIT-IV01","Decoding ID token failed.",e)}}}class m{constructor(e,t){this._cryptoUtils=t,this._cryptoHelper=new h(t),this._authenticationHelper=new b(e,this._cryptoHelper),this._dataLayer=e,this._config=()=>l(this,void 0,void 0,(function*(){return yield this._dataLayer.getConfigData()})),this._oidcProviderMetaData=()=>l(this,void 0,void 0,(function*(){return yield this._dataLayer.getOIDCProviderMetaData()}))}getAuthorizationURL(e,t){var i,n,d;return l(this,void 0,void 0,(function*(){const l=yield this._dataLayer.getOIDCProviderMetaDataParameter("authorization_endpoint"),o=yield this._config();if(!l||0===l.trim().length)throw new r("JS-AUTH_CORE-GAU-NF01","No authorization endpoint found.","No authorization endpoint was found in the OIDC provider meta data from the well-known endpoint or the authorization endpoint passed to the SDK is empty.");const c=new URL(l),a=new Map;a.set("response_type","code"),a.set("client_id",o.clientID);let s="openid";o.scope&&o.scope.length>0&&(o.scope.includes("openid")||o.scope.push("openid"),s=o.scope.join(" ")),a.set("scope",s),a.set("redirect_uri",o.signInRedirectURL),o.responseMode&&a.set("response_mode",o.responseMode);const Z=yield this._authenticationHelper.generatePKCEKey(t);if(o.enablePKCE){const e=null===(i=this._cryptoHelper)||void 0===i?void 0:i.getCodeVerifier(),l=null===(n=this._cryptoHelper)||void 0===n?void 0:n.getCodeChallenge(e);yield this._dataLayer.setTemporaryDataParameter(Z,e,t),a.set("code_challenge_method","S256"),a.set("code_challenge",l)}o.prompt&&a.set("prompt",o.prompt);const b=e;if(b)for(const[e,t]of Object.entries(b))if(""!=e&&""!=t&&"state"!==e){const l=e.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));a.set(l,t.toString())}a.set("state",u.generateStateParamForRequestCorrelation(Z,b?null===(d=b.state)||void 0===d?void 0:d.toString():""));for(const[e,t]of a.entries())c.searchParams.append(e,t);return c.toString()}))}requestAccessToken(e,t,i,n){return l(this,void 0,void 0,(function*(){const l=(yield this._oidcProviderMetaData()).token_endpoint,d=yield this._config();if(!l||0===l.trim().length)throw new r("JS-AUTH_CORE-RAT1-NF01","Token endpoint not found.","No token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the token endpoint passed to the SDK is empty.");t&&(yield this._dataLayer.setSessionDataParameter("session_state",t,n));const o=[];o.push(`client_id=${d.clientID}`),d.clientSecret&&d.clientSecret.trim().length>0&&o.push(`client_secret=${d.clientSecret}`);const c=e;let a;o.push(`code=${c}`),o.push("grant_type=authorization_code"),o.push(`redirect_uri=${d.signInRedirectURL}`),d.enablePKCE&&(o.push(`code_verifier=${yield this._dataLayer.getTemporaryDataParameter(u.extractPKCEKeyFromStateParam(i),n)}`),yield this._dataLayer.removeTemporaryDataParameter(u.extractPKCEKeyFromStateParam(i),n));try{a=yield fetch(l,{body:o.join("&"),credentials:d.sendCookiesInRequests?Z.Include:Z.SameOrigin,headers:new Headers(u.getTokenRequestHeaders()),method:"POST"})}catch(l){throw new r("JS-AUTH_CORE-RAT1-NE02","Requesting access token failed",null!=l?l:"The request to get the access token from the server failed.")}if(!a.ok)throw new r("JS-AUTH_CORE-RAT1-HE03",`Requesting access token failed with ${a.statusText}`,yield a.json());return yield this._authenticationHelper.handleTokenResponse(a,n)}))}refreshAccessToken(e){return l(this,void 0,void 0,(function*(){const t=(yield this._oidcProviderMetaData()).token_endpoint,l=yield this._config(),i=yield this._dataLayer.getSessionData(e);if(!i.refresh_token)throw new r("JS-AUTH_CORE-RAT2-NF01","No refresh token found.","There was no refresh token found. Asgardeo doesn't return a refresh token if the refresh token grant is not enabled.");if(!t||0===t.trim().length)throw new r("JS-AUTH_CORE-RAT2-NF02","No refresh token endpoint found.","No refresh token endpoint was in the OIDC provider meta data returned by the well-known endpoint or the refresh token endpoint passed to the SDK is empty.");const n=[];let d;n.push(`client_id=${l.clientID}`),n.push(`refresh_token=${i.refresh_token}`),n.push("grant_type=refresh_token"),l.clientSecret&&l.clientSecret.trim().length>0&&n.push(`client_secret=${l.clientSecret}`);try{d=yield fetch(t,{body:n.join("&"),credentials:l.sendCookiesInRequests?Z.Include:Z.SameOrigin,headers:new Headers(u.getTokenRequestHeaders()),method:"POST"})}catch(t){throw new r("JS-AUTH_CORE-RAT2-NR03","Refresh access token request failed.",null!=t?t:"The request to refresh the access token failed.")}if(!d.ok)throw new r("JS-AUTH_CORE-RAT2-HE04",`Refreshing access token failed with ${d.statusText}`,yield d.json());return this._authenticationHelper.handleTokenResponse(d,e)}))}revokeAccessToken(e){return l(this,void 0,void 0,(function*(){const t=(yield this._oidcProviderMetaData()).revocation_endpoint,l=yield this._config();if(!t||0===t.trim().length)throw new r("JS-AUTH_CORE-RAT3-NF01","No revoke access token endpoint found.","No revoke access token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the revoke access token endpoint passed to the SDK is empty.");const i=[];let n;i.push(`client_id=${l.clientID}`),i.push(`token=${(yield this._dataLayer.getSessionData(e)).access_token}`),i.push("token_type_hint=access_token");try{n=yield fetch(t,{body:i.join("&"),credentials:l.sendCookiesInRequests?Z.Include:Z.SameOrigin,headers:new Headers(u.getTokenRequestHeaders()),method:"POST"})}catch(t){throw new r("JS-AUTH_CORE-RAT3-NE02","The request to revoke access token failed.",null!=t?t:"The request sent to revoke the access token failed.")}if(200!==n.status||!n.ok)throw new r("JS-AUTH_CORE-RAT3-HE03",`Invalid response status received for revoke access token request (${n.statusText}).`,yield n.json());return this._authenticationHelper.clearUserSessionData(e),Promise.resolve(n)}))}requestCustomGrant(e,t){return l(this,void 0,void 0,(function*(){const i=yield this._oidcProviderMetaData(),n=yield this._config();let d;if(d=e.tokenEndpoint&&0!==e.tokenEndpoint.trim().length?e.tokenEndpoint:i.token_endpoint,!d||0===d.trim().length)throw new r("JS-AUTH_CORE-RCG-NF01","Token endpoint not found.","No token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the token endpoint passed to the SDK is empty.");const o=yield Promise.all(Object.entries(e.data).map((([e,i])=>l(this,void 0,void 0,(function*(){const l=yield this._authenticationHelper.replaceCustomGrantTemplateTags(i,t);return`${e}=${l}`})))));let c=Object.assign({},u.getTokenRequestHeaders());e.attachToken&&(c=Object.assign(Object.assign({},c),{Authorization:`Bearer ${(yield this._dataLayer.getSessionData(t)).access_token}`}));const a={body:o.join("&"),credentials:n.sendCookiesInRequests?Z.Include:Z.SameOrigin,headers:new Headers(c),method:"POST"};let s;try{s=yield fetch(d,a)}catch(e){throw new r("JS-AUTH_CORE-RCG-NE02","The custom grant request failed.",null!=e?e:"The request sent to get the custom grant failed.")}if(200!==s.status||!s.ok)throw new r("JS-AUTH_CORE-RCG-HE03",`Invalid response status received for the custom grant request. (${s.statusText})`,yield s.json());return e.returnsSession?this._authenticationHelper.handleTokenResponse(s,t):Promise.resolve(yield s.json())}))}getBasicUserInfo(e){return l(this,void 0,void 0,(function*(){const t=yield this._dataLayer.getSessionData(e),l=this._authenticationHelper.getAuthenticatedUserInfo(null==t?void 0:t.id_token);let i={allowedScopes:t.scope,sessionState:t.session_state};return Object.keys(l).forEach((e=>{void 0!==l[e]&&""!==l[e]&&null!==l[e]||delete l[e]})),i=Object.assign(Object.assign({},i),l),i}))}getDecodedIDToken(e){return l(this,void 0,void 0,(function*(){const t=(yield this._dataLayer.getSessionData(e)).id_token;return this._cryptoHelper.decodeIDToken(t)}))}getCryptoHelper(){return l(this,void 0,void 0,(function*(){return this._cryptoHelper}))}getIDToken(e){return l(this,void 0,void 0,(function*(){return(yield this._dataLayer.getSessionData(e)).id_token}))}getOIDCProviderMetaData(e){return l(this,void 0,void 0,(function*(){const t=yield this._config();if(!e&&(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated")))return Promise.resolve();const l=t.wellKnownEndpoint;if(l){let e;try{if(e=yield fetch(l),200!==e.status||!e.ok)throw new Error}catch(t){throw new r("JS-AUTH_CORE-GOPMD-HE01","Invalid well-known response","The well known endpoint response has been failed with an error.")}return yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpoints(yield e.json())),yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}if(t.baseUrl){try{yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpointsByBaseURL())}catch(t){throw new r("JS-AUTH_CORE-GOPMD-IV02","Resolving endpoints failed.",null!=t?t:"Resolving endpoints by base url failed.")}return yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}try{yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpointsExplicitly())}catch(t){throw new r("JS-AUTH_CORE-GOPMD-IV03","Resolving endpoints failed.",null!=t?t:"Resolving endpoints by explicitly failed.")}return yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}))}getOIDCServiceEndpoints(){var e,t,i,n,d,o,c,a,s,Z;return l(this,void 0,void 0,(function*(){const l=yield this._oidcProviderMetaData();return{authorizationEndpoint:null!==(e=l.authorization_endpoint)&&void 0!==e?e:"",checkSessionIframe:null!==(t=l.check_session_iframe)&&void 0!==t?t:"",endSessionEndpoint:null!==(i=l.end_session_endpoint)&&void 0!==i?i:"",introspectionEndpoint:null!==(n=l.introspection_endpoint)&&void 0!==n?n:"",issuer:null!==(d=l.issuer)&&void 0!==d?d:"",jwksUri:null!==(o=l.jwks_uri)&&void 0!==o?o:"",registrationEndpoint:null!==(c=l.registration_endpoint)&&void 0!==c?c:"",revocationEndpoint:null!==(a=l.revocation_endpoint)&&void 0!==a?a:"",tokenEndpoint:null!==(s=l.token_endpoint)&&void 0!==s?s:"",userinfoEndpoint:null!==(Z=l.userinfo_endpoint)&&void 0!==Z?Z:""}}))}getSignOutURL(e){var t,i,n;return l(this,void 0,void 0,(function*(){const l=null===(t=yield this._oidcProviderMetaData())||void 0===t?void 0:t.end_session_endpoint,d=yield this._config();if(!l||0===l.trim().length)throw new r("JS-AUTH_CORE-GSOU-NF01","Sign-out endpoint not found.","No sign-out endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the sign-out endpoint passed to the SDK is empty.");const o=null===(i=yield this._dataLayer.getSessionData(e))||void 0===i?void 0:i.id_token;if(!o||0===o.trim().length)throw new r("JS-AUTH_CORE-GSOU-NF02","ID token not found.","No ID token could be found. Either the session information is lost or you have not signed in.");const c=null!==(n=null==d?void 0:d.signOutRedirectURL)&&void 0!==n?n:null==d?void 0:d.signInRedirectURL;if(!c||0===c.trim().length)throw new r("JS-AUTH_CORE-GSOU-NF03","No sign-out redirect URL found.","The sign-out redirect URL cannot be found or the URL passed to the SDK is empty. No sign-in redirect URL has been found either. ");return`${l}?id_token_hint=${o}&post_logout_redirect_uri=${c}&state=sign_out_success`}))}signOut(e){return l(this,void 0,void 0,(function*(){return yield this.getSignOutURL(e)}))}clearUserSessionData(e){return l(this,void 0,void 0,(function*(){yield this._authenticationHelper.clearUserSessionData(e)}))}getAccessToken(e){var t;return l(this,void 0,void 0,(function*(){return null===(t=yield this._dataLayer.getSessionData(e))||void 0===t?void 0:t.access_token}))}isAuthenticated(e){return l(this,void 0,void 0,(function*(){return Boolean(yield this.getAccessToken(e))}))}getPKCECode(e,t){return l(this,void 0,void 0,(function*(){return yield this._dataLayer.getTemporaryDataParameter(u.extractPKCEKeyFromStateParam(e),t)}))}setPKCECode(e,t,i){return l(this,void 0,void 0,(function*(){return yield this._dataLayer.setTemporaryDataParameter(u.extractPKCEKeyFromStateParam(t),e,i)}))}updateConfig(e){return l(this,void 0,void 0,(function*(){yield this._dataLayer.setConfigData(e),yield this.getOIDCProviderMetaData(!0)}))}}class I{constructor(e,t){this._id=e,this._store=t}setDataInBulk(e,t){var i;return l(this,void 0,void 0,(function*(){const l=null!==(i=yield this._store.getData(e))&&void 0!==i?i:null,n=l&&JSON.parse(l),d=Object.assign(Object.assign({},n),t),o=JSON.stringify(d);yield this._store.setData(e,o)}))}setValue(e,t,i){var n;return l(this,void 0,void 0,(function*(){const l=null!==(n=yield this._store.getData(e))&&void 0!==n?n:null,d=l&&JSON.parse(l),o=Object.assign(Object.assign({},d),{[t]:i}),c=JSON.stringify(o);yield this._store.setData(e,c)}))}removeValue(e,t){var i;return l(this,void 0,void 0,(function*(){const l=null!==(i=yield this._store.getData(e))&&void 0!==i?i:null,n=l&&JSON.parse(l),d=Object.assign({},n);delete d[t];const o=JSON.stringify(d);yield this._store.setData(e,o)}))}_resolveKey(e,t){return t?`${e}-${this._id}-${t}`:`${e}-${this._id}`}setConfigData(t){return l(this,void 0,void 0,(function*(){yield this.setDataInBulk(this._resolveKey(e.Stores.ConfigData),t)}))}setOIDCProviderMetaData(t){return l(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(e.Stores.OIDCProviderMetaData),t)}))}setTemporaryData(t,i){return l(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(e.Stores.TemporaryData,i),t)}))}setSessionData(t,i){return l(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(e.Stores.SessionData,i),t)}))}setCustomData(e,t,i){return l(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(e,i),t)}))}getConfigData(){var t;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(t=yield this._store.getData(this._resolveKey(e.Stores.ConfigData)))&&void 0!==t?t:null)}))}getOIDCProviderMetaData(){var t;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(t=yield this._store.getData(this._resolveKey(e.Stores.OIDCProviderMetaData)))&&void 0!==t?t:null)}))}getTemporaryData(t){var i;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(i=yield this._store.getData(this._resolveKey(e.Stores.TemporaryData,t)))&&void 0!==i?i:null)}))}getSessionData(t){var i;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(i=yield this._store.getData(this._resolveKey(e.Stores.SessionData,t)))&&void 0!==i?i:null)}))}getCustomData(e,t){var i;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(i=yield this._store.getData(this._resolveKey(e,t)))&&void 0!==i?i:null)}))}removeConfigData(){return l(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(e.Stores.ConfigData))}))}removeOIDCProviderMetaData(){return l(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(e.Stores.OIDCProviderMetaData))}))}removeTemporaryData(t){return l(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(e.Stores.TemporaryData,t))}))}removeSessionData(t){return l(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(e.Stores.SessionData,t))}))}getConfigDataParameter(t){return l(this,void 0,void 0,(function*(){const l=yield this._store.getData(this._resolveKey(e.Stores.ConfigData));return l&&JSON.parse(l)[t]}))}getOIDCProviderMetaDataParameter(t){return l(this,void 0,void 0,(function*(){const l=yield this._store.getData(this._resolveKey(e.Stores.OIDCProviderMetaData));return l&&JSON.parse(l)[t]}))}getTemporaryDataParameter(t,i){return l(this,void 0,void 0,(function*(){const l=yield this._store.getData(this._resolveKey(e.Stores.TemporaryData,i));return l&&JSON.parse(l)[t]}))}getSessionDataParameter(t,i){return l(this,void 0,void 0,(function*(){const l=yield this._store.getData(this._resolveKey(e.Stores.SessionData,i));return l&&JSON.parse(l)[t]}))}setConfigDataParameter(t,i){return l(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(e.Stores.ConfigData),t,i)}))}setOIDCProviderMetaDataParameter(t,i){return l(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(e.Stores.OIDCProviderMetaData),t,i)}))}setTemporaryDataParameter(t,i,n){return l(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(e.Stores.TemporaryData,n),t,i)}))}setSessionDataParameter(t,i,n){return l(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(e.Stores.SessionData,n),t,i)}))}removeConfigDataParameter(t){return l(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(e.Stores.ConfigData),t)}))}removeOIDCProviderMetaDataParameter(t){return l(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(e.Stores.OIDCProviderMetaData),t)}))}removeTemporaryDataParameter(t,i){return l(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(e.Stores.TemporaryData,i),t)}))}removeSessionDataParameter(t,i){return l(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(e.Stores.SessionData,i),t)}))}}const G={clockTolerance:300,enablePKCE:!0,responseMode:e.ResponseMode.query,scope:["openid"],sendCookiesInRequests:!0,validateIDToken:!0};class p{
/**
         * This is the constructor method that returns an instance of the .
         *
         * @param {Store} store - The store object.
         *
         * @example
         * ```
         * const _store: Store = new DataStore();
         * const auth = new AsgardeoAuthClient<CustomClientConfig>(_store);
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#constructor
         * @preserve
         */
constructor(e,t){p._instanceID?p._instanceID+=1:p._instanceID=0,this._dataLayer=new I(`instance_${p._instanceID}`,e),this._authenticationCore=new m(this._dataLayer,t),p._authenticationCore=new m(this._dataLayer,t)
/**
         *
         * This method initializes the SDK with the config data.
         *
         * @param {AuthClientConfig<T>} config - The config object to initialize with.
         *
         * @example
         * const config = {
         *     signInRedirectURL: "http://localhost:3000/sign-in",
         *     clientID: "client ID",
         *     baseUrl: "https://localhost:9443"
         * }
         *
         * await auth.initialize(config);
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#initialize
         *
         * @preserve
         */}initialize(e){var t,i,n;return l(this,void 0,void 0,(function*(){yield this._dataLayer.setConfigData(Object.assign(Object.assign(Object.assign({},G),e),{scope:[...null!==(t=G.scope)&&void 0!==t?t:[],...null!==(n=null===(i=e.scope)||void 0===i?void 0:i.filter((e=>{var t;return!(null===(t=null==G?void 0:G.scope)||void 0===t?void 0:t.includes(e))})))&&void 0!==n?n:[]]}))}))}
/**
         * This method returns the `DataLayer` object that allows you to access authentication data.
         *
         * @return {DataLayer} - The `DataLayer` object.
         *
         * @example
         * ```
         * const data = auth.getDataLayer();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getDataLayer
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getDataLayer(){return this._dataLayer}
/**
         * This is an async method that returns a Promise that resolves with the authorization URL.
         *
         * @param {GetAuthURLConfig} config - (Optional) A config object to force initialization and pass
         * custom path parameters such as the fidp parameter.
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<string>} - A promise that resolves with the authorization URL.
         *
         * @example
         * ```
         * auth.getAuthorizationURL().then((url)=>{
         *  // console.log(url);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getAuthorizationURL
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getAuthorizationURL(e,t){return l(this,void 0,void 0,(function*(){const l=Object.assign({},e);return null==l||delete l.forceInit,(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated"))?this._authenticationCore.getAuthorizationURL(l,t):this._authenticationCore.getOIDCProviderMetaData(null==e?void 0:e.forceInit).then((()=>this._authenticationCore.getAuthorizationURL(l,t)))}))}
/**
         * This is an async method that sends a request to obtain the access token and returns a Promise
         * that resolves with the token and other relevant data.
         *
         * @param {string} authorizationCode - The authorization code.
         * @param {string} sessionState - The session state.
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<TokenResponse>} - A Promise that resolves with the token response.
         *
         * @example
         * ```
         * auth.requestAccessToken(authCode, sessionState).then((token)=>{
         *  // console.log(token);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#requestAccessToken
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */requestAccessToken(e,t,i,n){return l(this,void 0,void 0,(function*(){return(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated"))?this._authenticationCore.requestAccessToken(e,t,i,n):this._authenticationCore.getOIDCProviderMetaData(!1).then((()=>this._authenticationCore.requestAccessToken(e,t,i,n)))}))}
/**
         * This method clears all authentication data and returns the sign-out URL.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<string>} - A Promise that resolves with the sign-out URL.
         *
         * @example
         * ```
         * const signOutUrl = await auth.signOut();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#signOut
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */signOut(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.signOut(e)}))}
/**
         * This method returns the sign-out URL.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * **This doesn't clear the authentication data.**
         *
         * @return {Promise<string>} - A Promise that resolves with the sign-out URL.
         *
         * @example
         * ```
         * const signOutUrl = await auth.getSignOutURL();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getSignOutURL
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getSignOutURL(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getSignOutURL(e)}))}
/**
         * This method returns OIDC service endpoints that are fetched from the `.well-known` endpoint.
         *
         * @return {Promise<OIDCEndpoints>} - A Promise that resolves with an object containing the OIDC service endpoints.
         *
         * @example
         * ```
         * const endpoints = await auth.getOIDCServiceEndpoints();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getOIDCServiceEndpoints
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getOIDCServiceEndpoints(){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getOIDCServiceEndpoints()}))}
/**
         * This method decodes the payload of the ID token and returns it.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<DecodedIDTokenPayload>} - A Promise that resolves with the decoded ID token payload.
         *
         * @example
         * ```
         * const decodedIdToken = await auth.getDecodedIDToken();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getDecodedIDToken
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getDecodedIDToken(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getDecodedIDToken(e)}))}
/**
         * This method returns the ID token.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<string>} - A Promise that resolves with the ID token.
         *
         * @example
         * ```
         * const idToken = await auth.getIDToken();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getIDToken
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getIDToken(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getIDToken(e)}))}
/**
         * This method returns the basic user information obtained from the ID token.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<BasicUserInfo>} - A Promise that resolves with an object containing the basic user information.
         *
         * @example
         * ```
         * const userInfo = await auth.getBasicUserInfo();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getBasicUserInfo
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getBasicUserInfo(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getBasicUserInfo(e)}))}
/**
         * This method returns the crypto helper object.
         *
         * @return {Promise<CryptoHelper>} - A Promise that resolves with a CryptoHelper object.
         *
         * @example
         * ```
         * const cryptoHelper = await auth.CryptoHelper();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getCryptoHelper
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getCryptoHelper(){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getCryptoHelper()}))}
/**
         * This method revokes the access token.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * **This method also clears the authentication data.**
         *
         * @return {Promise<FetchResponse>} - A Promise that returns the response of the revoke-access-token request.
         *
         * @example
         * ```
         * auth.revokeAccessToken().then((response)=>{
         *  // console.log(response);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#revokeAccessToken
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */revokeAccessToken(e){return this._authenticationCore.revokeAccessToken(e)}
/**
         * This method refreshes the access token and returns a Promise that resolves with the new access
         * token and other relevant data.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<TokenResponse>} - A Promise that resolves with the token response.
         *
         * @example
         * ```
         * auth.refreshAccessToken().then((response)=>{
         *  // console.log(response);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#refreshAccessToken
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */refreshAccessToken(e){return this._authenticationCore.refreshAccessToken(e)}
/**
         * This method returns the access token.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<string>} - A Promise that resolves with the access token.
         *
         * @example
         * ```
         * const accessToken = await auth.getAccessToken();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getAccessToken
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getAccessToken(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getAccessToken(e)}))}
/**
         * This method sends a custom-grant request and returns a Promise that resolves with the response
         * depending on the config passed.
         *
         * @param {CustomGrantConfig} config - A config object containing the custom grant configurations.
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<TokenResponse | FetchResponse>} - A Promise that resolves with the response depending
         * on your configurations.
         *
         * @example
         * ```
         * const config = {
         *   attachToken: false,
         *   data: {
         *       client_id: "{{clientID}}",
         *       grant_type: "account_switch",
         *       scope: "{{scope}}",
         *       token: "{{token}}",
         *   },
         *   id: "account-switch",
         *   returnResponse: true,
         *   returnsSession: true,
         *   signInRequired: true
         * }
         *
         * auth.requestCustomGrant(config).then((response)=>{
         *  // console.log(response);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#requestCustomGrant
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */requestCustomGrant(e,t){return this._authenticationCore.requestCustomGrant(e,t)}
/**
         * This method returns if the user is authenticated or not.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @return {Promise<boolean>} - A Promise that resolves with `true` if the user is authenticated, `false` otherwise.
         *
         * @example
         * ```
         * await auth.isAuthenticated();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#isAuthenticated
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */isAuthenticated(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.isAuthenticated(e)}))}
/**
         * This method returns the PKCE code generated during the generation of the authentication URL.
         *
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         * @param {string} state - The state parameter that was passed in the authentication URL.
         *
         * @return {Promise<string>} - A Promise that resolves with the PKCE code.
         *
         * @example
         * ```
         * const pkce = await getPKCECode();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getPKCECode
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getPKCECode(e,t){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getPKCECode(e,t)}))}
/**
         * This method sets the PKCE code to the data store.
         *
         * @param {string} pkce - The PKCE code.
         * @param {string} state - The state parameter that was passed in the authentication URL.
         * @param {string} userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @example
         * ```
         * await auth.setPKCECode("pkce_code")
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#setPKCECode
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */setPKCECode(e,t,i){return l(this,void 0,void 0,(function*(){yield this._authenticationCore.setPKCECode(e,t,i)}))}
/**
         * This method returns if the sign-out is successful or not.
         *
         * @param {string} signOutRedirectUrl - The URL to which the user has been redirected to after signing-out.
         *
         * **The server appends path parameters to the `signOutRedirectURL` and these path parameters
         *  are required for this method to function.**
         *
         * @return {boolean} - `true` if successful, `false` otherwise.
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#isSignOutSuccessful
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */static isSignOutSuccessful(e){const t=new URL(e),l=t.searchParams.get("state"),i=Boolean(t.searchParams.get("error"));return!!l&&"sign_out_success"===l&&!i}
/**
         * This method returns if the sign-out has failed or not.
         *
         * @param {string} signOutRedirectUrl - The URL to which the user has been redirected to after signing-out.
         *
         * **The server appends path parameters to the `signOutRedirectURL` and these path parameters
         *  are required for this method to function.**
         *
         * @return {boolean} - `true` if successful, `false` otherwise.
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#didSignOutFail
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */static didSignOutFail(e){const t=new URL(e),l=t.searchParams.get("state"),i=Boolean(t.searchParams.get("error"));return!!l&&"sign_out_success"===l&&i}
/**
         * This method updates the configuration that was passed into the constructor when instantiating this class.
         *
         * @param {Partial<AuthClientConfig<T>>} config - A config object to update the SDK configurations with.
         *
         * @example
         * ```
         * const config = {
         *     signInRedirectURL: "http://localhost:3000/sign-in",
         *     clientID: "client ID",
         *     baseUrl: "https://localhost:9443"
         * }
         *
         * await auth.updateConfig(config);
         * ```
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#updateConfig
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */updateConfig(e){return l(this,void 0,void 0,(function*(){yield this._authenticationCore.updateConfig(e)}))}static clearUserSessionData(e){return l(this,void 0,void 0,(function*(){yield this._authenticationCore.clearUserSessionData(e)}))}}function g(e,t,l){var i=void 0===t?null:t,n=function(e,t){var l=atob(e);if(t){for(var i=new Uint8Array(l.length),n=0,d=l.length;n<d;++n)i[n]=l.charCodeAt(n);return String.fromCharCode.apply(null,new Uint16Array(i.buffer))}return l}(e,void 0!==l&&l),d=n.indexOf("\n",10)+1,o=n.substring(d)+(i?"//# sourceMappingURL="+i:""),c=new Blob([o],{type:"application/javascript"});return URL.createObjectURL(c)}var X,y,W,V,C=(X="",y=null,W=!1,function(e){return V=V||g(X,y,W),new Worker(V,e)});const R="init",S="sign-out",Y="http-request",v="http-request-all",K="request-custom-grant",N="revoke-access-token",J="request-start",H="request-success",f="request-finish",k="get-oidc-service-endpoints",U="get-basic-user-info",L="get-decoded-id-token",T="get-crypto-helper",F="enable_http_handler",B="disable_http_handler",A="get_auth_url",z="request_get_token",w="is_authenticated",x="get_sign_out_url",P="refresh_access-token",Q="set_session_state",M="start_auto_refresh_token",j="update_config",E="get_id_token",D="check_session_signed_in",O="check_session_signed_out",_="get_config_data",q="set_session_state_from_iframe";var $,ee;e.Storage=void 0,($=e.Storage||(e.Storage={})).LocalStorage="localStorage",$.SessionStorage="sessionStorage",$.WebWorker="webWorker",$.BrowserMemory="browserMemory",e.Hooks=void 0,(ee=e.Hooks||(e.Hooks={})).SignIn="sign-in",ee.SignOut="sign-out",ee.Initialize="initialize",ee.HttpRequestStart="http-request-start",ee.HttpRequestFinish="http-request-finish",ee.HttpRequestError="http-request-error",ee.HttpRequestSuccess="http-request-success",ee.RevokeAccessToken="revoke-access-token",ee.CustomGrant="custom-grant",ee.SignOutFailed="sign-out-failed";const te="rpIFrame",le="promptNoneIFrame",ie="Y2hlY2tTZXNzaW9u",ne="sign-in-silently",de="initialized-silent-sign-in",oe="promptNoneRequestSent",ce="error",ae="error_description",se="custom_grant_config",Ze="state",re="Access token is invalid";class ue{constructor(e,t){this._authenticationClient=e,this._dataLayer=this._authenticationClient.getDataLayer(),this._spaHelper=t}enableHttpHandler(e){(null==e?void 0:e.enableHandler)&&e.enableHandler()}disableHttpHandler(e){(null==e?void 0:e.disableHandler)&&e.disableHandler()}initializeSessionManger(e,t,l,i,n){var d,o,c;n.initialize(e.clientID,null!==(d=t.checkSessionIframe)&&void 0!==d?d:"",l,null!==(o=e.checkSessionInterval)&&void 0!==o?o:3,null!==(c=e.sessionRefreshInterval)&&void 0!==c?c:300,e.signInRedirectURL,i)}requestCustomGrant(e,l){var i,n,d;return t(this,void 0,void 0,(function*(){let o=!0,c=!1;if(null==e?void 0:e.tokenEndpoint){o=!1;for(const t of[...null!==(n=null===(i=yield this._dataLayer.getConfigData())||void 0===i?void 0:i.resourceServerURLs)&&void 0!==n?n:[],e.baseUrl])if(t&&(null===(d=e.tokenEndpoint)||void 0===d?void 0:d.startsWith(t))){c=!0;break}}return e.shouldReplayAfterRefresh&&this._dataLayer.setTemporaryDataParameter(se,JSON.stringify(e)),o||c?this._authenticationClient.requestCustomGrant(e).then((i=>t(this,void 0,void 0,(function*(){return l&&"function"==typeof l&&l(e),e.returnsSession?(this._spaHelper.refreshAccessTokenAutomatically(this),this._authenticationClient.getBasicUserInfo()):i})))).catch((e=>Promise.reject(e))):Promise.reject(new r("SPA-MAIN_THREAD_CLIENT-RCG-IV01","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified token endpoint in this request cannot be found among the `resourceServerURLs`"))}))}getCustomGrantConfigData(){return t(this,void 0,void 0,(function*(){const e=yield this._dataLayer.getTemporaryDataParameter(se);return e?JSON.parse(e):null}))}refreshAccessToken(e){return t(this,void 0,void 0,(function*(){try{yield this._authenticationClient.refreshAccessToken();const t=yield this.getCustomGrantConfigData();return t&&(yield this.requestCustomGrant(t,e)),this._spaHelper.refreshAccessTokenAutomatically(this),this._authenticationClient.getBasicUserInfo()}catch(e){return Promise.reject(e)}}))}httpRequest(e,l,i,n,d,o){var c,a;return t(this,void 0,void 0,(function*(){let s=!1;const Z=yield this._dataLayer.getConfigData();for(const e of[...null!==(c=yield null==Z?void 0:Z.resourceServerURLs)&&void 0!==c?c:[],Z.baseUrl])if(e&&(null===(a=null==l?void 0:l.url)||void 0===a?void 0:a.startsWith(e))){s=!0;break}return s?e.request(l).then((e=>Promise.resolve(e))).catch((c=>t(this,void 0,void 0,(function*(){var t,a,s;if(401===(null===(t=null==c?void 0:c.response)||void 0===t?void 0:t.status)||!(null==c?void 0:c.response)){let t;try{t=yield this.refreshAccessToken(o)}catch(e){throw i&&("function"==typeof n&&(yield n(Object.assign(Object.assign({},c),{code:re}))),"function"==typeof d&&d()),new r("SPA-AUTH_HELPER-HR-SE01",null!==(a=null==e?void 0:e.name)&&void 0!==a?a:"Refresh token request failed.",null!==(s=null==e?void 0:e.message)&&void 0!==s?s:"An error occurred while trying to refresh the access token following a 401 response from the server.")}if(t)try{const t=yield e.request(l);return Promise.resolve(t)}catch(e){return i&&("function"==typeof n&&(yield n(e)),"function"==typeof d&&d()),Promise.reject(e)}}return i&&("function"==typeof n&&(yield n(c)),"function"==typeof d&&d()),Promise.reject(c)})))):Promise.reject(new r("SPA-AUTH_HELPER-HR-IV02","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified endpoint in this request cannot be found among the `resourceServerURLs`"))}))}httpRequestAll(e,l,i,n,d){var o,c,a;return t(this,void 0,void 0,(function*(){let s=!0;const Z=yield this._dataLayer.getConfigData();for(const t of e){let e=!1;for(const l of[...null!==(c=null===(o=yield Z)||void 0===o?void 0:o.resourceServerURLs)&&void 0!==c?c:[],Z.baseUrl])if(l&&(null===(a=t.url)||void 0===a?void 0:a.startsWith(l))){e=!0;break}if(!e){s=!1;break}}const u=[];if(s)return e.forEach((e=>{u.push(l.request(e))})),(null==l?void 0:l.all)&&l.all(u).then((e=>Promise.resolve(e))).catch((e=>t(this,void 0,void 0,(function*(){var o,c,a;if(401===(null===(o=null==e?void 0:e.response)||void 0===o?void 0:o.status)||!(null==e?void 0:e.response)){let o;try{o=yield this._authenticationClient.refreshAccessToken()}catch(t){throw i&&("function"==typeof n&&(yield n(Object.assign(Object.assign({},e),{code:re}))),"function"==typeof d&&d()),new r("SPA-AUTH_HELPER-HRA-SE01",null!==(c=null==t?void 0:t.name)&&void 0!==c?c:"Refresh token request failed.",null!==(a=null==t?void 0:t.message)&&void 0!==a?a:"An error occurred while trying to refresh the access token following a 401 response from the server.")}if(o)return l.all&&l.all(u).then((e=>Promise.resolve(e))).catch((e=>t(this,void 0,void 0,(function*(){return i&&("function"==typeof n&&(yield n(e)),"function"==typeof d&&d()),Promise.reject(e)}))))}return i&&("function"==typeof n&&(yield n(e)),"function"==typeof d&&d()),Promise.reject(e)}))));throw new r("SPA-AUTH_HELPER-HRA-IV02","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified endpoint in this request cannot be found among the `resourceServerURLs`")}))}requestAccessToken(l,i,n,d,o){return t(this,void 0,void 0,(function*(){const c=yield this._dataLayer.getConfigData();if(c.storage===e.Storage.BrowserMemory&&c.enablePKCE&&i){const e=me.getPKCE(u.extractPKCEKeyFromStateParam(i));yield this._authenticationClient.setPKCECode(u.extractPKCEKeyFromStateParam(i),e)}else c.storage===e.Storage.WebWorker&&d&&(yield this._authenticationClient.setPKCECode(d,null!=o?o:""));return l?this._authenticationClient.requestAccessToken(l,null!=i?i:"",null!=o?o:"").then((()=>t(this,void 0,void 0,(function*(){return c.storage!==e.Storage.WebWorker?(me.setSignOutURL(yield this._authenticationClient.getSignOutURL()),this._spaHelper&&(this._spaHelper.clearRefreshTokenTimeout(),this._spaHelper.refreshAccessTokenAutomatically(this)),n&&"function"==typeof n&&c.enableOIDCSessionManagement&&n()):this._spaHelper&&this._spaHelper.refreshAccessTokenAutomatically(this),this._authenticationClient.getBasicUserInfo()})))).catch((e=>Promise.reject(e))):Promise.reject(new r("SPA-AUTH_HELPER-RAT1-NF01","No authorization code.","No authorization code was found."))}))}trySignInSilently(e,l,i){var n;return t(this,void 0,void 0,(function*(){if(me.isInitializedSilentSignIn())return yield i.receivePromptNoneResponse(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});const d=document.getElementById(te),o=null===(n=null==d?void 0:d.contentDocument)||void 0===n?void 0:n.getElementById(le);try{const t=yield e();o.src=t}catch(e){return Promise.reject(e)}return new Promise(((e,i)=>{const n=setTimeout((()=>{e(!1)}),1e4),d=o=>t(this,void 0,void 0,(function*(){var t,c,a,s;const Z=o.data;(null==Z?void 0:Z.type)==O&&(window.removeEventListener("message",d),clearTimeout(n),e(!1)),(null==Z?void 0:Z.type)==D&&(null===(t=null==Z?void 0:Z.data)||void 0===t?void 0:t.code)&&l(null===(c=null==Z?void 0:Z.data)||void 0===c?void 0:c.code,null===(a=null==Z?void 0:Z.data)||void 0===a?void 0:a.sessionState,null===(s=null==Z?void 0:Z.data)||void 0===s?void 0:s.state).then((t=>{window.removeEventListener("message",d),e(t)})).catch((e=>{window.removeEventListener("message",d),i(e)})).finally((()=>{clearTimeout(n)}))}));window.addEventListener("message",d)}))}))}handleSignIn(l,i,n){return t(this,void 0,void 0,(function*(){const t=yield this._dataLayer.getConfigData();if(yield l())return Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});if(t.storage!==e.Storage.WebWorker&&(yield this._authenticationClient.isAuthenticated()))return this._spaHelper.clearRefreshTokenTimeout(),this._spaHelper.refreshAccessTokenAutomatically(this),t.enableOIDCSessionManagement&&i(),Promise.resolve(yield this._authenticationClient.getBasicUserInfo());const d=new URL(window.location.href).searchParams.get(ce),o=new URL(window.location.href).searchParams.get(ae);if(d){const e=new URL(window.location.href);throw e.searchParams.delete(ce),e.searchParams.delete(ae),history.pushState(null,document.title,e.toString()),new r("SPA-AUTH_HELPER-SI-SE01",d,null!=o?o:"")}if(t.storage===e.Storage.WebWorker&&n){const e=yield n();if(e)return e}}))}getBasicUserInfo(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getBasicUserInfo()}))}getDecodedIDToken(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getDecodedIDToken()}))}getDecodedIDPIDToken(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getDecodedIDToken()}))}getCryptoHelper(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getCryptoHelper()}))}getIDToken(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getIDToken()}))}getOIDCServiceEndpoints(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getOIDCServiceEndpoints()}))}getAccessToken(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getAccessToken()}))}getIDPAccessToken(){var e;return t(this,void 0,void 0,(function*(){return null===(e=yield this._dataLayer.getSessionData())||void 0===e?void 0:e.access_token}))}getDataLayer(){return this._dataLayer}isAuthenticated(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.isAuthenticated()}))}}class be{constructor(e){this._authenticationClient=e,this._dataLayer=this._authenticationClient.getDataLayer()}refreshAccessTokenAutomatically(e){return t(this,void 0,void 0,(function*(){const l=yield this._dataLayer.getSessionData();if(l.refresh_token){const n=parseInt(l.expires_in),d=setTimeout((()=>t(this,void 0,void 0,(function*(){yield e.refreshAccessToken()}))),1e3*(n<=10?n:n-10));yield this._dataLayer.setTemporaryDataParameter(i,JSON.stringify(d))}}))}clearRefreshTokenTimeout(){return t(this,void 0,void 0,(function*(){if(yield this._dataLayer.getTemporaryDataParameter(i)){const e=JSON.parse(yield this._dataLayer.getTemporaryDataParameter(i));clearTimeout(e)}}))}}class he{constructor(){}static generateSuccessMessage(e){return{blob:(null==e?void 0:e.data)instanceof Blob?null==e?void 0:e.data:null,data:JSON.stringify(null!=e?e:""),success:!0}}static generateFailureMessage(e){return(null==e?void 0:e.toJSON)&&delete e.toJSON,{error:JSON.stringify(null!=e?e:""),success:!1}}}class me{constructor(){}static removeAuthorizationCode(){const e=location.href;history.pushState({},document.title,e.replace(/\?code=.*$/,""))}static getPKCE(e){var t;return null!==(t=sessionStorage.getItem(e))&&void 0!==t?t:""}static setPKCE(e,t){sessionStorage.setItem(e,t)}static setSignOutURL(e){sessionStorage.setItem(c,e)}static getSignOutURL(){var e;return null!==(e=sessionStorage.getItem(c))&&void 0!==e?e:""}static removePKCE(e){sessionStorage.removeItem(e)}static canContinueSignIn(e,t){return!(e&&!me.hasErrorInURL()&&!me.hasAuthSearchParamsInURL()&&!t)}static isInitializedSilentSignIn(){return me.isSilentStatePresentInURL()}static wasSignInCalled(){return!(!me.hasErrorInURL()&&!me.hasAuthSearchParamsInURL()||this.isSilentStatePresentInURL())}static wasSilentSignInCalled(){const e=sessionStorage.getItem(de),t=e?JSON.parse(e):null;return Boolean(t)}static isSignOutSuccessful(){return t(this,void 0,void 0,(function*(){if(p.isSignOutSuccessful(window.location.href)){const e=window.location.href.split("?")[0];return history.pushState({},document.title,e),yield p.clearUserSessionData(),!0}return!1}))}static didSignOutFail(){if(p.didSignOutFail(window.location.href)){const e=new URL(window.location.href),t=e.searchParams.get(ce),l=e.searchParams.get(ae),i=window.location.href.split("?")[0];return history.pushState({},document.title,i),{description:null!=l?l:"",error:null!=t?t:""}}return!1}static isSilentStatePresentInURL(){var e;const t=new URL(window.location.href).searchParams.get("state");return null!==(e=null==t?void 0:t.includes(ne))&&void 0!==e&&e}static hasAuthSearchParamsInURL(e=window.location.search){return/[?&]code=[^&]+/.test(e)}static hasErrorInURL(e=window.location.href){const t=new URL(e);return!!t.searchParams.get(ce)&&t.searchParams.get(Ze)!==a}static canSendPromptNoneRequest(){const e=sessionStorage.getItem(oe);return!(e?JSON.parse(e):null)}static setPromptNoneRequestSent(e){sessionStorage.setItem(oe,JSON.stringify(e))}static waitTillPageRedirect(e){return t(this,void 0,void 0,(function*(){const t=null!=e?e:3e3;yield new Promise((e=>setTimeout(e,1e3*t)))}))}}const Ie=(()=>{let l,i,n,d,c,a,s,Z,r,u,b;const h=(e,t,o,s,Z,r,u)=>{l=e,i=t,n=o,d=s,c=r,a=Z,b=u,d>-1&&m(),a>-1&&(Z=setInterval((()=>{p()}),1e3*a))},m=()=>t(void 0,void 0,void 0,(function*(){var e;if(!i||!l||!c)return;const o="opIFrame";const a=document.getElementById(te);(null===(e=null==a?void 0:a.contentDocument)||void 0===e?void 0:e.getElementById(o)).src=i+"?client_id="+l+"&redirect_uri="+c,Z=setInterval((function(){var e;return t(this,void 0,void 0,(function*(){const t=yield n();if(Boolean(l)&&Boolean(t)){const n=`${l} ${t}`,d=document.getElementById(te),c=(null===(e=null==d?void 0:d.contentDocument)||void 0===e?void 0:e.getElementById(o)).contentWindow;null==c||c.postMessage(n,i)}}))}),1e3*d),G()})),I=()=>{clearInterval(Z),clearInterval(undefined)},G=()=>{null===window||void 0===window||window.addEventListener("message",(function(e){var l;return t(this,void 0,void 0,(function*(){const t=i;!t||(null==t?void 0:t.indexOf(e.origin))<0||(null===(l=null==e?void 0:e.data)||void 0===l?void 0:l.type)===q||"unchanged"===e.data||("error"===e.data?window.location.href=yield s():"changed"===e.data&&p())}))}),!1)},p=()=>t(void 0,void 0,void 0,(function*(){var t;const l=document.getElementById(te),i=null===(t=null==l?void 0:l.contentDocument)||void 0===t?void 0:t.getElementById(le);if(me.canSendPromptNoneRequest()){me.setPromptNoneRequestSent(!0);const t=e=>{var l,i,n;(null===(l=null==e?void 0:e.data)||void 0===l?void 0:l.type)===q&&(u(null!==(n=null===(i=null==e?void 0:e.data)||void 0===i?void 0:i.data)&&void 0!==n?n:""),null===window||void 0===window||window.removeEventListener("message",t))};r!==e.Storage.BrowserMemory&&r!==e.Storage.WebWorker||null===window||void 0===window||window.addEventListener("message",t);const l=yield b({prompt:"none",responseMode:"query",state:ie});i.src=l}})),g=l=>t(void 0,void 0,void 0,(function*(){var t,i;const n=new URL(window.location.href).searchParams.get(Ze),d=new URL(window.location.href).searchParams.get(o),c=window.parent.parent;if(null!==n&&(n.includes(ie)||n.includes(ne))){const o=new URL(window.location.href).searchParams.get("code");if(null!==o&&0!==o.length){if(n.includes(ne)){const e={data:{code:o,sessionState:null!=d?d:"",state:n},type:D};return sessionStorage.setItem(de,"false"),c.postMessage(e,c.origin),me.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield me.waitTillPageRedirect(),!0}const a=new URL(window.location.href).searchParams.get("session_state");if(r===e.Storage.LocalStorage||r===e.Storage.SessionStorage)l&&(yield l(a));else{const e={data:null!=a?a:"",type:q};null===(i=null===(t=null===window||void 0===window?void 0:window.parent)||void 0===t?void 0:t.parent)||void 0===i||i.postMessage(e)}return me.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield me.waitTillPageRedirect(),!0}if(n.includes(ne)){const e={type:O};return window.parent.parent.postMessage(e,c.origin),me.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield me.waitTillPageRedirect(),!0}return me.setPromptNoneRequestSent(!1),c.location.href=yield s(),window.location.href="about:blank",yield me.waitTillPageRedirect(),!0}return!1}));return(e,l,i)=>t(void 0,void 0,void 0,(function*(){var t;let n=document.createElement("iframe");n.setAttribute("id",te),n.style.display="none";let d=!1;n.onload=()=>{var e,t,l,i;n=document.getElementById(te);const o=null==n?void 0:n.contentDocument,c=null==o?void 0:o.createElement("iframe");c&&(c.setAttribute("id","opIFrame"),c.style.display="none");const a=null==o?void 0:o.createElement("iframe");a&&(a.setAttribute("id",le),a.style.display="none"),c&&(null===(t=null===(e=null==n?void 0:n.contentDocument)||void 0===e?void 0:e.body)||void 0===t||t.appendChild(c)),a&&(null===(i=null===(l=null==n?void 0:n.contentDocument)||void 0===l?void 0:l.body)||void 0===i||i.appendChild(a)),d=!0},null===(t=null===document||void 0===document?void 0:document.body)||void 0===t||t.appendChild(n),s=e,r=l,u=i;for(;!1===d;)yield new Promise((e=>setTimeout(e,1)));return{initialize:h,receivePromptNoneResponse:g,reset:I}}))})();var Ge="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function pe(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function ge(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(l){var i=Object.getOwnPropertyDescriptor(e,l);Object.defineProperty(t,l,i.get?i:{enumerable:!0,get:function(){return e[l]}})})),t}var Xe={exports:{}},ye=function(e,t){return function(){for(var l=new Array(arguments.length),i=0;i<l.length;i++)l[i]=arguments[i];return e.apply(t,l)}},We=ye,Ve=Object.prototype.toString;function Ce(e){return Array.isArray(e)}function Re(e){return void 0===e}function Se(e){return"[object ArrayBuffer]"===Ve.call(e)}function Ye(e){return null!==e&&"object"==typeof e}function ve(e){if("[object Object]"!==Ve.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function Ke(e){return"[object Function]"===Ve.call(e)}function Ne(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),Ce(e))for(var l=0,i=e.length;l<i;l++)t.call(null,e[l],l,e);else for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.call(null,e[n],n,e)}var Je={isArray:Ce,isArrayBuffer:Se,isBuffer:function(e){return null!==e&&!Re(e)&&null!==e.constructor&&!Re(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"[object FormData]"===Ve.call(e)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&Se(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:Ye,isPlainObject:ve,isUndefined:Re,isDate:function(e){return"[object Date]"===Ve.call(e)},isFile:function(e){return"[object File]"===Ve.call(e)},isBlob:function(e){return"[object Blob]"===Ve.call(e)},isFunction:Ke,isStream:function(e){return Ye(e)&&Ke(e.pipe)},isURLSearchParams:function(e){return"[object URLSearchParams]"===Ve.call(e)},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:Ne,merge:function e(){var t={};function l(l,i){ve(t[i])&&ve(l)?t[i]=e(t[i],l):ve(l)?t[i]=e({},l):Ce(l)?t[i]=l.slice():t[i]=l}for(var i=0,n=arguments.length;i<n;i++)Ne(arguments[i],l);return t},extend:function(e,t,l){return Ne(t,(function(t,i){e[i]=l&&"function"==typeof t?We(t,l):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}},He=Je;function fe(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var ke=function(e,t,l){if(!t)return e;var i;if(l)i=l(t);else if(He.isURLSearchParams(t))i=t.toString();else{var n=[];He.forEach(t,(function(e,t){null!=e&&(He.isArray(e)?t+="[]":e=[e],He.forEach(e,(function(e){He.isDate(e)?e=e.toISOString():He.isObject(e)&&(e=JSON.stringify(e)),n.push(fe(t)+"="+fe(e))})))})),i=n.join("&")}if(i){var d=e.indexOf("#");-1!==d&&(e=e.slice(0,d)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e},Ue=Je;function Le(){this.handlers=[]}Le.prototype.use=function(e,t,l){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!l&&l.synchronous,runWhen:l?l.runWhen:null}),this.handlers.length-1},Le.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},Le.prototype.forEach=function(e){Ue.forEach(this.handlers,(function(t){null!==t&&e(t)}))};var Te=Le,Fe="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function Be(){throw new Error("setTimeout has not been defined")}function Ae(){throw new Error("clearTimeout has not been defined")}var ze=Be,we=Ae;function xe(e){if(ze===setTimeout)return setTimeout(e,0);if((ze===Be||!ze)&&setTimeout)return ze=setTimeout,setTimeout(e,0);try{return ze(e,0)}catch(t){try{return ze.call(null,e,0)}catch(t){return ze.call(this,e,0)}}}"function"==typeof Fe.setTimeout&&(ze=setTimeout),"function"==typeof Fe.clearTimeout&&(we=clearTimeout);var Pe,Qe=[],Me=!1,je=-1;function Ee(){Me&&Pe&&(Me=!1,Pe.length?Qe=Pe.concat(Qe):je=-1,Qe.length&&De())}function De(){if(!Me){var e=xe(Ee);Me=!0;for(var t=Qe.length;t;){for(Pe=Qe,Qe=[];++je<t;)Pe&&Pe[je].run();je=-1,t=Qe.length}Pe=null,Me=!1,function(e){if(we===clearTimeout)return clearTimeout(e);if((we===Ae||!we)&&clearTimeout)return we=clearTimeout,clearTimeout(e);try{we(e)}catch(t){try{return we.call(null,e)}catch(t){return we.call(this,e)}}}(e)}}function Oe(e,t){this.fun=e,this.array=t}Oe.prototype.run=function(){this.fun.apply(null,this.array)};function _e(){}var qe=_e,$e=_e,et=_e,tt=_e,lt=_e,it=_e,nt=_e;var dt=Fe.performance||{},ot=dt.now||dt.mozNow||dt.msNow||dt.oNow||dt.webkitNow||function(){return(new Date).getTime()};var ct=new Date;var at={nextTick:function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var l=1;l<arguments.length;l++)t[l-1]=arguments[l];Qe.push(new Oe(e,t)),1!==Qe.length||Me||xe(De)},title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:qe,addListener:$e,once:et,off:tt,removeListener:lt,removeAllListeners:it,emit:nt,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*ot.call(dt),l=Math.floor(t),i=Math.floor(t%1*1e9);return e&&(l-=e[0],(i-=e[1])<0&&(l--,i+=1e9)),[l,i]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-ct)/1e3}},st=at,Zt=Je,rt=function(e,t,l,i,n){return e.config=t,l&&(e.code=l),e.request=i,e.response=n,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e},ut={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},bt=rt,ht=function(e,t,l,i,n){var d=new Error(e);return bt(d,t,l,i,n)},mt=ht,It=Je,Gt=It.isStandardBrowserEnv()?{write:function(e,t,l,i,n,d){var o=[];o.push(e+"="+encodeURIComponent(t)),It.isNumber(l)&&o.push("expires="+new Date(l).toGMTString()),It.isString(i)&&o.push("path="+i),It.isString(n)&&o.push("domain="+n),!0===d&&o.push("secure"),document.cookie=o.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},pt=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)},gt=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e},Xt=Je,yt=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],Wt=Je,Vt=Wt.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),l=document.createElement("a");function i(e){var i=e;return t&&(l.setAttribute("href",i),i=l.href),l.setAttribute("href",i),{href:l.href,protocol:l.protocol?l.protocol.replace(/:$/,""):"",host:l.host,search:l.search?l.search.replace(/^\?/,""):"",hash:l.hash?l.hash.replace(/^#/,""):"",hostname:l.hostname,port:l.port,pathname:"/"===l.pathname.charAt(0)?l.pathname:"/"+l.pathname}}return e=i(window.location.href),function(t){var l=Wt.isString(t)?i(t):t;return l.protocol===e.protocol&&l.host===e.host}}():function(){return!0};function Ct(e){this.message=e}Ct.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},Ct.prototype.__CANCEL__=!0;var Rt=Ct,St=Je,Yt=function(e,t,l){var i=l.config.validateStatus;l.status&&i&&!i(l.status)?t(mt("Request failed with status code "+l.status,l.config,null,l.request,l)):e(l)},vt=Gt,Kt=ke,Nt=function(e,t){return e&&!pt(t)?gt(e,t):t},Jt=function(e){var t,l,i,n={};return e?(Xt.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=Xt.trim(e.substr(0,i)).toLowerCase(),l=Xt.trim(e.substr(i+1)),t){if(n[t]&&yt.indexOf(t)>=0)return;n[t]="set-cookie"===t?(n[t]?n[t]:[]).concat([l]):n[t]?n[t]+", "+l:l}})),n):n},Ht=Vt,ft=ht,kt=ut,Ut=Rt,Lt=function(e){return new Promise((function(t,l){var i,n=e.data,d=e.headers,o=e.responseType;function c(){e.cancelToken&&e.cancelToken.unsubscribe(i),e.signal&&e.signal.removeEventListener("abort",i)}St.isFormData(n)&&delete d["Content-Type"];var a=new XMLHttpRequest;if(e.auth){var s=e.auth.username||"",Z=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";d.Authorization="Basic "+btoa(s+":"+Z)}var r=Nt(e.baseURL,e.url);function u(){if(a){var i="getAllResponseHeaders"in a?Jt(a.getAllResponseHeaders()):null,n={data:o&&"text"!==o&&"json"!==o?a.response:a.responseText,status:a.status,statusText:a.statusText,headers:i,config:e,request:a};Yt((function(e){t(e),c()}),(function(e){l(e),c()}),n),a=null}}if(a.open(e.method.toUpperCase(),Kt(r,e.params,e.paramsSerializer),!0),a.timeout=e.timeout,"onloadend"in a?a.onloadend=u:a.onreadystatechange=function(){a&&4===a.readyState&&(0!==a.status||a.responseURL&&0===a.responseURL.indexOf("file:"))&&setTimeout(u)},a.onabort=function(){a&&(l(ft("Request aborted",e,"ECONNABORTED",a)),a=null)},a.onerror=function(){l(ft("Network Error",e,null,a)),a=null},a.ontimeout=function(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",i=e.transitional||kt;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),l(ft(t,e,i.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",a)),a=null},St.isStandardBrowserEnv()){var b=(e.withCredentials||Ht(r))&&e.xsrfCookieName?vt.read(e.xsrfCookieName):void 0;b&&(d[e.xsrfHeaderName]=b)}"setRequestHeader"in a&&St.forEach(d,(function(e,t){void 0===n&&"content-type"===t.toLowerCase()?delete d[t]:a.setRequestHeader(t,e)})),St.isUndefined(e.withCredentials)||(a.withCredentials=!!e.withCredentials),o&&"json"!==o&&(a.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&a.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&a.upload&&a.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(i=function(e){a&&(l(!e||e&&e.type?new Ut("canceled"):e),a.abort(),a=null)},e.cancelToken&&e.cancelToken.subscribe(i),e.signal&&(e.signal.aborted?i():e.signal.addEventListener("abort",i))),n||(n=null),a.send(n)}))},Tt=Je,Ft=function(e,t){Zt.forEach(e,(function(l,i){i!==t&&i.toUpperCase()===t.toUpperCase()&&(e[t]=l,delete e[i])}))},Bt=rt,At={"Content-Type":"application/x-www-form-urlencoded"};function zt(e,t){!Tt.isUndefined(e)&&Tt.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var wt,xt={transitional:ut,adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==st&&"[object process]"===Object.prototype.toString.call(st))&&(wt=Lt),wt),transformRequest:[function(e,t){return Ft(t,"Accept"),Ft(t,"Content-Type"),Tt.isFormData(e)||Tt.isArrayBuffer(e)||Tt.isBuffer(e)||Tt.isStream(e)||Tt.isFile(e)||Tt.isBlob(e)?e:Tt.isArrayBufferView(e)?e.buffer:Tt.isURLSearchParams(e)?(zt(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):Tt.isObject(e)||t&&"application/json"===t["Content-Type"]?(zt(t,"application/json"),function(e,t,l){if(Tt.isString(e))try{return(t||JSON.parse)(e),Tt.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(l||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||xt.transitional,l=t&&t.silentJSONParsing,i=t&&t.forcedJSONParsing,n=!l&&"json"===this.responseType;if(n||i&&Tt.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(n){if("SyntaxError"===e.name)throw Bt(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};Tt.forEach(["delete","get","head"],(function(e){xt.headers[e]={}})),Tt.forEach(["post","put","patch"],(function(e){xt.headers[e]=Tt.merge(At)}));var Pt=xt,Qt=Je,Mt=Pt,jt=function(e){return!(!e||!e.__CANCEL__)},Et=Je,Dt=function(e,t,l){var i=this||Mt;return Qt.forEach(l,(function(l){e=l.call(i,e,t)})),e},Ot=jt,_t=Pt,qt=Rt;function $t(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new qt("canceled")}var el=Je,tl=function(e,t){t=t||{};var l={};function i(e,t){return el.isPlainObject(e)&&el.isPlainObject(t)?el.merge(e,t):el.isPlainObject(t)?el.merge({},t):el.isArray(t)?t.slice():t}function n(l){return el.isUndefined(t[l])?el.isUndefined(e[l])?void 0:i(void 0,e[l]):i(e[l],t[l])}function d(e){if(!el.isUndefined(t[e]))return i(void 0,t[e])}function o(l){return el.isUndefined(t[l])?el.isUndefined(e[l])?void 0:i(void 0,e[l]):i(void 0,t[l])}function c(l){return l in t?i(e[l],t[l]):l in e?i(void 0,e[l]):void 0}var a={url:d,method:d,data:d,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:c};return el.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=a[e]||n,i=t(e);el.isUndefined(i)&&t!==c||(l[e]=i)})),l},ll="0.26.1",il=ll,nl={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){nl[e]=function(l){return typeof l===e||"a"+(t<1?"n ":" ")+e}}));var dl={};nl.transitional=function(e,t,l){function i(e,t){return"[Axios v"+il+"] Transitional option '"+e+"'"+t+(l?". "+l:"")}return function(l,n,d){if(!1===e)throw new Error(i(n," has been removed"+(t?" in "+t:"")));return t&&!dl[n]&&(dl[n]=!0,console.warn(i(n," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(l,n,d)}};var ol={assertOptions:function(e,t,l){if("object"!=typeof e)throw new TypeError("options must be an object");for(var i=Object.keys(e),n=i.length;n-- >0;){var d=i[n],o=t[d];if(o){var c=e[d],a=void 0===c||o(c,d,e);if(!0!==a)throw new TypeError("option "+d+" must be "+a)}else if(!0!==l)throw Error("Unknown option "+d)}},validators:nl},cl=Je,al=ke,sl=Te,Zl=function(e){return $t(e),e.headers=e.headers||{},e.data=Dt.call(e,e.data,e.headers,e.transformRequest),e.headers=Et.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),Et.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||_t.adapter)(e).then((function(t){return $t(e),t.data=Dt.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return Ot(t)||($t(e),t&&t.response&&(t.response.data=Dt.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))},rl=tl,ul=ol,bl=ul.validators;function hl(e){this.defaults=e,this.interceptors={request:new sl,response:new sl}}hl.prototype.request=function(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},(t=rl(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var l=t.transitional;void 0!==l&&ul.assertOptions(l,{silentJSONParsing:bl.transitional(bl.boolean),forcedJSONParsing:bl.transitional(bl.boolean),clarifyTimeoutError:bl.transitional(bl.boolean)},!1);var i=[],n=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(n=n&&e.synchronous,i.unshift(e.fulfilled,e.rejected))}));var d,o=[];if(this.interceptors.response.forEach((function(e){o.push(e.fulfilled,e.rejected)})),!n){var c=[Zl,void 0];for(Array.prototype.unshift.apply(c,i),c=c.concat(o),d=Promise.resolve(t);c.length;)d=d.then(c.shift(),c.shift());return d}for(var a=t;i.length;){var s=i.shift(),Z=i.shift();try{a=s(a)}catch(e){Z(e);break}}try{d=Zl(a)}catch(e){return Promise.reject(e)}for(;o.length;)d=d.then(o.shift(),o.shift());return d},hl.prototype.getUri=function(e){return e=rl(this.defaults,e),al(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},cl.forEach(["delete","get","head","options"],(function(e){hl.prototype[e]=function(t,l){return this.request(rl(l||{},{method:e,url:t,data:(l||{}).data}))}})),cl.forEach(["post","put","patch"],(function(e){hl.prototype[e]=function(t,l,i){return this.request(rl(i||{},{method:e,url:t,data:l}))}}));var ml=hl,Il=Rt;function Gl(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var l=this;this.promise.then((function(e){if(l._listeners){var t,i=l._listeners.length;for(t=0;t<i;t++)l._listeners[t](e);l._listeners=null}})),this.promise.then=function(e){var t,i=new Promise((function(e){l.subscribe(e),t=e})).then(e);return i.cancel=function(){l.unsubscribe(t)},i},e((function(e){l.reason||(l.reason=new Il(e),t(l.reason))}))}Gl.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},Gl.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},Gl.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},Gl.source=function(){var e,t=new Gl((function(t){e=t}));return{token:t,cancel:e}};var pl=Gl,gl=Je,Xl=Je,yl=ye,Wl=ml,Vl=tl;var Cl=function e(t){var l=new Wl(t),i=yl(Wl.prototype.request,l);return Xl.extend(i,Wl.prototype,l),Xl.extend(i,l),i.create=function(l){return e(Vl(t,l))},i}(Pt);Cl.Axios=Wl,Cl.Cancel=Rt,Cl.CancelToken=pl,Cl.isCancel=jt,Cl.VERSION=ll,Cl.all=function(e){return Promise.all(e)},Cl.spread=function(e){return function(t){return e.apply(null,t)}},Cl.isAxiosError=function(e){return gl.isObject(e)&&!0===e.isAxiosError},Xe.exports=Cl,Xe.exports.default=Cl;var Rl,Sl=Xe.exports;let Yl=Rl=class{constructor(){this.attachToken=()=>Promise.resolve(),this.requestStartCallback=()=>null,this.requestSuccessCallback=()=>null,this.requestErrorCallback=()=>null,this.requestFinishCallback=()=>null,this.init=this.init.bind(this),this.setHttpRequestErrorCallback=this.setHttpRequestErrorCallback.bind(this),this.setHttpRequestFinishCallback=this.setHttpRequestFinishCallback.bind(this),this.setHttpRequestStartCallback=this.setHttpRequestStartCallback.bind(this),this.setHttpRequestSuccessCallback=this.setHttpRequestSuccessCallback.bind(this)}static getInstance(){return this.axiosInstance||(this.axiosInstance=Sl.create({withCredentials:!0}),this.clientInstance||(this.clientInstance=new Rl),this.axiosInstance.interceptors.request.use((e=>t(this,void 0,void 0,(function*(){return yield this.clientInstance.requestHandler(e)})))),this.axiosInstance.interceptors.response.use((e=>this.clientInstance.successHandler(e)),(e=>this.clientInstance.errorHandler(e))),this.axiosInstance.all=Sl.all,this.axiosInstance.spread=Sl.spread,this.axiosInstance.init=this.clientInstance.init,this.axiosInstance.enableHandler=this.clientInstance.enableHandler,this.axiosInstance.disableHandler=this.clientInstance.disableHandler,this.axiosInstance.disableHandlerWithTimeout=this.clientInstance.disableHandlerWithTimeout,this.axiosInstance.setHttpRequestStartCallback=this.clientInstance.setHttpRequestStartCallback,this.axiosInstance.setHttpRequestSuccessCallback=this.clientInstance.setHttpRequestSuccessCallback,this.axiosInstance.setHttpRequestErrorCallback=this.clientInstance.setHttpRequestErrorCallback,this.axiosInstance.setHttpRequestFinishCallback=this.clientInstance.setHttpRequestFinishCallback),this.axiosInstance}requestHandler(e){return t(this,void 0,void 0,(function*(){if(yield this.attachToken(e),null==e?void 0:e.shouldEncodeToFormData){const t=null==e?void 0:e.data,l=new FormData;Object.keys(t).forEach((e=>{l.append(e,t[e])})),e.data=l}return e.startTimeInMs=(new Date).getTime(),Rl.isHandlerEnabled&&this.requestStartCallback&&"function"==typeof this.requestStartCallback&&this.requestStartCallback(e),e}))}errorHandler(e){throw Rl.isHandlerEnabled&&(this.requestErrorCallback&&"function"==typeof this.requestErrorCallback&&this.requestErrorCallback(e),this.requestFinishCallback&&"function"==typeof this.requestFinishCallback&&this.requestFinishCallback()),e}successHandler(e){return Rl.isHandlerEnabled&&(this.requestSuccessCallback&&"function"==typeof this.requestSuccessCallback&&this.requestSuccessCallback(e),this.requestFinishCallback&&"function"==typeof this.requestFinishCallback&&this.requestFinishCallback()),e}init(e=!0,l){return t(this,void 0,void 0,(function*(){Rl.isHandlerEnabled=e,this.attachToken=l}))}enableHandler(){Rl.isHandlerEnabled=!0}disableHandler(){Rl.isHandlerEnabled=!1}disableHandlerWithTimeout(e=Rl.DEFAULT_HANDLER_DISABLE_TIMEOUT){Rl.isHandlerEnabled=!1,setTimeout((()=>{Rl.isHandlerEnabled=!0}),e)}setHttpRequestStartCallback(e){this.requestStartCallback=e}setHttpRequestSuccessCallback(e){this.requestSuccessCallback=e}setHttpRequestErrorCallback(e){this.requestErrorCallback=e}setHttpRequestFinishCallback(e){this.requestFinishCallback=e}};Yl.DEFAULT_HANDLER_DISABLE_TIMEOUT=1e3,Yl=Rl=function(e,t,l,i){var n,d=arguments.length,o=d<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,l):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,l,i);else for(var c=e.length-1;c>=0;c--)(n=e[c])&&(o=(d<3?n(o):d>3?n(t,l,o):n(t,l))||o);return d>3&&o&&Object.defineProperty(t,l,o),o}([e=>{}],Yl);class vl{setData(e,l){return t(this,void 0,void 0,(function*(){localStorage.setItem(e,l)}))}getData(e){var l;return t(this,void 0,void 0,(function*(){return null!==(l=localStorage.getItem(e))&&void 0!==l?l:"{}"}))}removeData(e){return t(this,void 0,void 0,(function*(){localStorage.removeItem(e)}))}}class Kl{constructor(){this._data=new Map}setData(e,l){return t(this,void 0,void 0,(function*(){this._data.set(e,l)}))}getData(e){var l,i;return t(this,void 0,void 0,(function*(){return null!==(i=null===(l=this._data)||void 0===l?void 0:l.get(e))&&void 0!==i?i:"{}"}))}removeData(e){return t(this,void 0,void 0,(function*(){this._data.delete(e)}))}}class Nl{setData(e,l){return t(this,void 0,void 0,(function*(){sessionStorage.setItem(e,l)}))}getData(e){var l;return t(this,void 0,void 0,(function*(){return null!==(l=sessionStorage.getItem(e))&&void 0!==l?l:"{}"}))}removeData(e){return t(this,void 0,void 0,(function*(){sessionStorage.removeItem(e)}))}}var Jl=[],Hl=[],fl="undefined"!=typeof Uint8Array?Uint8Array:Array,kl=!1;function Ul(){kl=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,l=e.length;t<l;++t)Jl[t]=e[t],Hl[e.charCodeAt(t)]=t;Hl["-".charCodeAt(0)]=62,Hl["_".charCodeAt(0)]=63}function Ll(e,t,l){for(var i,n,d=[],o=t;o<l;o+=3)i=(e[o]<<16)+(e[o+1]<<8)+e[o+2],d.push(Jl[(n=i)>>18&63]+Jl[n>>12&63]+Jl[n>>6&63]+Jl[63&n]);return d.join("")}function Tl(e){var t;kl||Ul();for(var l=e.length,i=l%3,n="",d=[],o=16383,c=0,a=l-i;c<a;c+=o)d.push(Ll(e,c,c+o>a?a:c+o));return 1===i?(t=e[l-1],n+=Jl[t>>2],n+=Jl[t<<4&63],n+="=="):2===i&&(t=(e[l-2]<<8)+e[l-1],n+=Jl[t>>10],n+=Jl[t>>4&63],n+=Jl[t<<2&63],n+="="),d.push(n),d.join("")}function Fl(e,t,l,i,n){var d,o,c=8*n-i-1,a=(1<<c)-1,s=a>>1,Z=-7,r=l?n-1:0,u=l?-1:1,b=e[t+r];for(r+=u,d=b&(1<<-Z)-1,b>>=-Z,Z+=c;Z>0;d=256*d+e[t+r],r+=u,Z-=8);for(o=d&(1<<-Z)-1,d>>=-Z,Z+=i;Z>0;o=256*o+e[t+r],r+=u,Z-=8);if(0===d)d=1-s;else{if(d===a)return o?NaN:1/0*(b?-1:1);o+=Math.pow(2,i),d-=s}return(b?-1:1)*o*Math.pow(2,d-i)}function Bl(e,t,l,i,n,d){var o,c,a,s=8*d-n-1,Z=(1<<s)-1,r=Z>>1,u=23===n?Math.pow(2,-24)-Math.pow(2,-77):0,b=i?0:d-1,h=i?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(c=isNaN(t)?1:0,o=Z):(o=Math.floor(Math.log(t)/Math.LN2),t*(a=Math.pow(2,-o))<1&&(o--,a*=2),(t+=o+r>=1?u/a:u*Math.pow(2,1-r))*a>=2&&(o++,a/=2),o+r>=Z?(c=0,o=Z):o+r>=1?(c=(t*a-1)*Math.pow(2,n),o+=r):(c=t*Math.pow(2,r-1)*Math.pow(2,n),o=0));n>=8;e[l+b]=255&c,b+=h,c/=256,n-=8);for(o=o<<n|c,s+=n;s>0;e[l+b]=255&o,b+=h,o/=256,s-=8);e[l+b-h]|=128*m}var Al={}.toString,zl=Array.isArray||function(e){return"[object Array]"==Al.call(e)};Ql.TYPED_ARRAY_SUPPORT=void 0===Fe.TYPED_ARRAY_SUPPORT||Fe.TYPED_ARRAY_SUPPORT;var wl=xl();function xl(){return Ql.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function Pl(e,t){if(xl()<t)throw new RangeError("Invalid typed array length");return Ql.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=Ql.prototype:(null===e&&(e=new Ql(t)),e.length=t),e}function Ql(e,t,l){if(!(Ql.TYPED_ARRAY_SUPPORT||this instanceof Ql))return new Ql(e,t,l);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return El(this,e)}return Ml(this,e,t,l)}function Ml(e,t,l,i){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,l,i){if(t.byteLength,l<0||t.byteLength<l)throw new RangeError("'offset' is out of bounds");if(t.byteLength<l+(i||0))throw new RangeError("'length' is out of bounds");t=void 0===l&&void 0===i?new Uint8Array(t):void 0===i?new Uint8Array(t,l):new Uint8Array(t,l,i);Ql.TYPED_ARRAY_SUPPORT?(e=t).__proto__=Ql.prototype:e=Dl(e,t);return e}(e,t,l,i):"string"==typeof t?function(e,t,l){"string"==typeof l&&""!==l||(l="utf8");if(!Ql.isEncoding(l))throw new TypeError('"encoding" must be a valid string encoding');var i=0|ql(t,l),n=(e=Pl(e,i)).write(t,l);n!==i&&(e=e.slice(0,n));return e}(e,t,l):function(e,t){if(_l(t)){var l=0|Ol(t.length);return 0===(e=Pl(e,l)).length||t.copy(e,0,0,l),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(i=t.length)!=i?Pl(e,0):Dl(e,t);if("Buffer"===t.type&&zl(t.data))return Dl(e,t.data)}var i;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function jl(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function El(e,t){if(jl(t),e=Pl(e,t<0?0:0|Ol(t)),!Ql.TYPED_ARRAY_SUPPORT)for(var l=0;l<t;++l)e[l]=0;return e}function Dl(e,t){var l=t.length<0?0:0|Ol(t.length);e=Pl(e,l);for(var i=0;i<l;i+=1)e[i]=255&t[i];return e}function Ol(e){if(e>=xl())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+xl().toString(16)+" bytes");return 0|e}function _l(e){return!(null==e||!e._isBuffer)}function ql(e,t){if(_l(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var l=e.length;if(0===l)return 0;for(var i=!1;;)switch(t){case"ascii":case"latin1":case"binary":return l;case"utf8":case"utf-8":case void 0:return Ri(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*l;case"hex":return l>>>1;case"base64":return Si(e).length;default:if(i)return Ri(e).length;t=(""+t).toLowerCase(),i=!0}}function $l(e,t,l){var i=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===l||l>this.length)&&(l=this.length),l<=0)return"";if((l>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return hi(this,t,l);case"utf8":case"utf-8":return Zi(this,t,l);case"ascii":return ui(this,t,l);case"latin1":case"binary":return bi(this,t,l);case"base64":return si(this,t,l);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return mi(this,t,l);default:if(i)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),i=!0}}function ei(e,t,l){var i=e[t];e[t]=e[l],e[l]=i}function ti(e,t,l,i,n){if(0===e.length)return-1;if("string"==typeof l?(i=l,l=0):l>2147483647?l=2147483647:l<-2147483648&&(l=-2147483648),l=+l,isNaN(l)&&(l=n?0:e.length-1),l<0&&(l=e.length+l),l>=e.length){if(n)return-1;l=e.length-1}else if(l<0){if(!n)return-1;l=0}if("string"==typeof t&&(t=Ql.from(t,i)),_l(t))return 0===t.length?-1:li(e,t,l,i,n);if("number"==typeof t)return t&=255,Ql.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?n?Uint8Array.prototype.indexOf.call(e,t,l):Uint8Array.prototype.lastIndexOf.call(e,t,l):li(e,[t],l,i,n);throw new TypeError("val must be string, number or Buffer")}function li(e,t,l,i,n){var d,o=1,c=e.length,a=t.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(e.length<2||t.length<2)return-1;o=2,c/=2,a/=2,l/=2}function s(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(n){var Z=-1;for(d=l;d<c;d++)if(s(e,d)===s(t,-1===Z?0:d-Z)){if(-1===Z&&(Z=d),d-Z+1===a)return Z*o}else-1!==Z&&(d-=d-Z),Z=-1}else for(l+a>c&&(l=c-a),d=l;d>=0;d--){for(var r=!0,u=0;u<a;u++)if(s(e,d+u)!==s(t,u)){r=!1;break}if(r)return d}return-1}function ii(e,t,l,i){l=Number(l)||0;var n=e.length-l;i?(i=Number(i))>n&&(i=n):i=n;var d=t.length;if(d%2!=0)throw new TypeError("Invalid hex string");i>d/2&&(i=d/2);for(var o=0;o<i;++o){var c=parseInt(t.substr(2*o,2),16);if(isNaN(c))return o;e[l+o]=c}return o}function ni(e,t,l,i){return Yi(Ri(t,e.length-l),e,l,i)}function di(e,t,l,i){return Yi(function(e){for(var t=[],l=0;l<e.length;++l)t.push(255&e.charCodeAt(l));return t}(t),e,l,i)}function oi(e,t,l,i){return di(e,t,l,i)}function ci(e,t,l,i){return Yi(Si(t),e,l,i)}function ai(e,t,l,i){return Yi(function(e,t){for(var l,i,n,d=[],o=0;o<e.length&&!((t-=2)<0);++o)i=(l=e.charCodeAt(o))>>8,n=l%256,d.push(n),d.push(i);return d}(t,e.length-l),e,l,i)}function si(e,t,l){return 0===t&&l===e.length?Tl(e):Tl(e.slice(t,l))}function Zi(e,t,l){l=Math.min(e.length,l);for(var i=[],n=t;n<l;){var d,o,c,a,s=e[n],Z=null,r=s>239?4:s>223?3:s>191?2:1;if(n+r<=l)switch(r){case 1:s<128&&(Z=s);break;case 2:128==(192&(d=e[n+1]))&&(a=(31&s)<<6|63&d)>127&&(Z=a);break;case 3:d=e[n+1],o=e[n+2],128==(192&d)&&128==(192&o)&&(a=(15&s)<<12|(63&d)<<6|63&o)>2047&&(a<55296||a>57343)&&(Z=a);break;case 4:d=e[n+1],o=e[n+2],c=e[n+3],128==(192&d)&&128==(192&o)&&128==(192&c)&&(a=(15&s)<<18|(63&d)<<12|(63&o)<<6|63&c)>65535&&a<1114112&&(Z=a)}null===Z?(Z=65533,r=1):Z>65535&&(Z-=65536,i.push(Z>>>10&1023|55296),Z=56320|1023&Z),i.push(Z),n+=r}return function(e){var t=e.length;if(t<=ri)return String.fromCharCode.apply(String,e);var l="",i=0;for(;i<t;)l+=String.fromCharCode.apply(String,e.slice(i,i+=ri));return l}(i)}Ql.poolSize=8192,Ql._augment=function(e){return e.__proto__=Ql.prototype,e},Ql.from=function(e,t,l){return Ml(null,e,t,l)},Ql.TYPED_ARRAY_SUPPORT&&(Ql.prototype.__proto__=Uint8Array.prototype,Ql.__proto__=Uint8Array),Ql.alloc=function(e,t,l){return function(e,t,l,i){return jl(t),t<=0?Pl(e,t):void 0!==l?"string"==typeof i?Pl(e,t).fill(l,i):Pl(e,t).fill(l):Pl(e,t)}(null,e,t,l)},Ql.allocUnsafe=function(e){return El(null,e)},Ql.allocUnsafeSlow=function(e){return El(null,e)},Ql.isBuffer=vi,Ql.compare=function(e,t){if(!_l(e)||!_l(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var l=e.length,i=t.length,n=0,d=Math.min(l,i);n<d;++n)if(e[n]!==t[n]){l=e[n],i=t[n];break}return l<i?-1:i<l?1:0},Ql.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Ql.concat=function(e,t){if(!zl(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Ql.alloc(0);var l;if(void 0===t)for(t=0,l=0;l<e.length;++l)t+=e[l].length;var i=Ql.allocUnsafe(t),n=0;for(l=0;l<e.length;++l){var d=e[l];if(!_l(d))throw new TypeError('"list" argument must be an Array of Buffers');d.copy(i,n),n+=d.length}return i},Ql.byteLength=ql,Ql.prototype._isBuffer=!0,Ql.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)ei(this,t,t+1);return this},Ql.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)ei(this,t,t+3),ei(this,t+1,t+2);return this},Ql.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)ei(this,t,t+7),ei(this,t+1,t+6),ei(this,t+2,t+5),ei(this,t+3,t+4);return this},Ql.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?Zi(this,0,e):$l.apply(this,arguments)},Ql.prototype.equals=function(e){if(!_l(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Ql.compare(this,e)},Ql.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},Ql.prototype.compare=function(e,t,l,i,n){if(!_l(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===l&&(l=e?e.length:0),void 0===i&&(i=0),void 0===n&&(n=this.length),t<0||l>e.length||i<0||n>this.length)throw new RangeError("out of range index");if(i>=n&&t>=l)return 0;if(i>=n)return-1;if(t>=l)return 1;if(this===e)return 0;for(var d=(n>>>=0)-(i>>>=0),o=(l>>>=0)-(t>>>=0),c=Math.min(d,o),a=this.slice(i,n),s=e.slice(t,l),Z=0;Z<c;++Z)if(a[Z]!==s[Z]){d=a[Z],o=s[Z];break}return d<o?-1:o<d?1:0},Ql.prototype.includes=function(e,t,l){return-1!==this.indexOf(e,t,l)},Ql.prototype.indexOf=function(e,t,l){return ti(this,e,t,l,!0)},Ql.prototype.lastIndexOf=function(e,t,l){return ti(this,e,t,l,!1)},Ql.prototype.write=function(e,t,l,i){if(void 0===t)i="utf8",l=this.length,t=0;else if(void 0===l&&"string"==typeof t)i=t,l=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(l)?(l|=0,void 0===i&&(i="utf8")):(i=l,l=void 0)}var n=this.length-t;if((void 0===l||l>n)&&(l=n),e.length>0&&(l<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var d=!1;;)switch(i){case"hex":return ii(this,e,t,l);case"utf8":case"utf-8":return ni(this,e,t,l);case"ascii":return di(this,e,t,l);case"latin1":case"binary":return oi(this,e,t,l);case"base64":return ci(this,e,t,l);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ai(this,e,t,l);default:if(d)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),d=!0}},Ql.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var ri=4096;function ui(e,t,l){var i="";l=Math.min(e.length,l);for(var n=t;n<l;++n)i+=String.fromCharCode(127&e[n]);return i}function bi(e,t,l){var i="";l=Math.min(e.length,l);for(var n=t;n<l;++n)i+=String.fromCharCode(e[n]);return i}function hi(e,t,l){var i=e.length;(!t||t<0)&&(t=0),(!l||l<0||l>i)&&(l=i);for(var n="",d=t;d<l;++d)n+=Ci(e[d]);return n}function mi(e,t,l){for(var i=e.slice(t,l),n="",d=0;d<i.length;d+=2)n+=String.fromCharCode(i[d]+256*i[d+1]);return n}function Ii(e,t,l){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>l)throw new RangeError("Trying to access beyond buffer length")}function Gi(e,t,l,i,n,d){if(!_l(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>n||t<d)throw new RangeError('"value" argument is out of bounds');if(l+i>e.length)throw new RangeError("Index out of range")}function pi(e,t,l,i){t<0&&(t=65535+t+1);for(var n=0,d=Math.min(e.length-l,2);n<d;++n)e[l+n]=(t&255<<8*(i?n:1-n))>>>8*(i?n:1-n)}function gi(e,t,l,i){t<0&&(t=4294967295+t+1);for(var n=0,d=Math.min(e.length-l,4);n<d;++n)e[l+n]=t>>>8*(i?n:3-n)&255}function Xi(e,t,l,i,n,d){if(l+i>e.length)throw new RangeError("Index out of range");if(l<0)throw new RangeError("Index out of range")}function yi(e,t,l,i,n){return n||Xi(e,0,l,4),Bl(e,t,l,i,23,4),l+4}function Wi(e,t,l,i,n){return n||Xi(e,0,l,8),Bl(e,t,l,i,52,8),l+8}Ql.prototype.slice=function(e,t){var l,i=this.length;if((e=~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),(t=void 0===t?i:~~t)<0?(t+=i)<0&&(t=0):t>i&&(t=i),t<e&&(t=e),Ql.TYPED_ARRAY_SUPPORT)(l=this.subarray(e,t)).__proto__=Ql.prototype;else{var n=t-e;l=new Ql(n,void 0);for(var d=0;d<n;++d)l[d]=this[d+e]}return l},Ql.prototype.readUIntLE=function(e,t,l){e|=0,t|=0,l||Ii(e,t,this.length);for(var i=this[e],n=1,d=0;++d<t&&(n*=256);)i+=this[e+d]*n;return i},Ql.prototype.readUIntBE=function(e,t,l){e|=0,t|=0,l||Ii(e,t,this.length);for(var i=this[e+--t],n=1;t>0&&(n*=256);)i+=this[e+--t]*n;return i},Ql.prototype.readUInt8=function(e,t){return t||Ii(e,1,this.length),this[e]},Ql.prototype.readUInt16LE=function(e,t){return t||Ii(e,2,this.length),this[e]|this[e+1]<<8},Ql.prototype.readUInt16BE=function(e,t){return t||Ii(e,2,this.length),this[e]<<8|this[e+1]},Ql.prototype.readUInt32LE=function(e,t){return t||Ii(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Ql.prototype.readUInt32BE=function(e,t){return t||Ii(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Ql.prototype.readIntLE=function(e,t,l){e|=0,t|=0,l||Ii(e,t,this.length);for(var i=this[e],n=1,d=0;++d<t&&(n*=256);)i+=this[e+d]*n;return i>=(n*=128)&&(i-=Math.pow(2,8*t)),i},Ql.prototype.readIntBE=function(e,t,l){e|=0,t|=0,l||Ii(e,t,this.length);for(var i=t,n=1,d=this[e+--i];i>0&&(n*=256);)d+=this[e+--i]*n;return d>=(n*=128)&&(d-=Math.pow(2,8*t)),d},Ql.prototype.readInt8=function(e,t){return t||Ii(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Ql.prototype.readInt16LE=function(e,t){t||Ii(e,2,this.length);var l=this[e]|this[e+1]<<8;return 32768&l?4294901760|l:l},Ql.prototype.readInt16BE=function(e,t){t||Ii(e,2,this.length);var l=this[e+1]|this[e]<<8;return 32768&l?4294901760|l:l},Ql.prototype.readInt32LE=function(e,t){return t||Ii(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Ql.prototype.readInt32BE=function(e,t){return t||Ii(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Ql.prototype.readFloatLE=function(e,t){return t||Ii(e,4,this.length),Fl(this,e,!0,23,4)},Ql.prototype.readFloatBE=function(e,t){return t||Ii(e,4,this.length),Fl(this,e,!1,23,4)},Ql.prototype.readDoubleLE=function(e,t){return t||Ii(e,8,this.length),Fl(this,e,!0,52,8)},Ql.prototype.readDoubleBE=function(e,t){return t||Ii(e,8,this.length),Fl(this,e,!1,52,8)},Ql.prototype.writeUIntLE=function(e,t,l,i){(e=+e,t|=0,l|=0,i)||Gi(this,e,t,l,Math.pow(2,8*l)-1,0);var n=1,d=0;for(this[t]=255&e;++d<l&&(n*=256);)this[t+d]=e/n&255;return t+l},Ql.prototype.writeUIntBE=function(e,t,l,i){(e=+e,t|=0,l|=0,i)||Gi(this,e,t,l,Math.pow(2,8*l)-1,0);var n=l-1,d=1;for(this[t+n]=255&e;--n>=0&&(d*=256);)this[t+n]=e/d&255;return t+l},Ql.prototype.writeUInt8=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,1,255,0),Ql.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},Ql.prototype.writeUInt16LE=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,2,65535,0),Ql.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):pi(this,e,t,!0),t+2},Ql.prototype.writeUInt16BE=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,2,65535,0),Ql.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):pi(this,e,t,!1),t+2},Ql.prototype.writeUInt32LE=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,4,4294967295,0),Ql.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):gi(this,e,t,!0),t+4},Ql.prototype.writeUInt32BE=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,4,4294967295,0),Ql.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):gi(this,e,t,!1),t+4},Ql.prototype.writeIntLE=function(e,t,l,i){if(e=+e,t|=0,!i){var n=Math.pow(2,8*l-1);Gi(this,e,t,l,n-1,-n)}var d=0,o=1,c=0;for(this[t]=255&e;++d<l&&(o*=256);)e<0&&0===c&&0!==this[t+d-1]&&(c=1),this[t+d]=(e/o>>0)-c&255;return t+l},Ql.prototype.writeIntBE=function(e,t,l,i){if(e=+e,t|=0,!i){var n=Math.pow(2,8*l-1);Gi(this,e,t,l,n-1,-n)}var d=l-1,o=1,c=0;for(this[t+d]=255&e;--d>=0&&(o*=256);)e<0&&0===c&&0!==this[t+d+1]&&(c=1),this[t+d]=(e/o>>0)-c&255;return t+l},Ql.prototype.writeInt8=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,1,127,-128),Ql.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},Ql.prototype.writeInt16LE=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,2,32767,-32768),Ql.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):pi(this,e,t,!0),t+2},Ql.prototype.writeInt16BE=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,2,32767,-32768),Ql.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):pi(this,e,t,!1),t+2},Ql.prototype.writeInt32LE=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,4,2147483647,-2147483648),Ql.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):gi(this,e,t,!0),t+4},Ql.prototype.writeInt32BE=function(e,t,l){return e=+e,t|=0,l||Gi(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),Ql.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):gi(this,e,t,!1),t+4},Ql.prototype.writeFloatLE=function(e,t,l){return yi(this,e,t,!0,l)},Ql.prototype.writeFloatBE=function(e,t,l){return yi(this,e,t,!1,l)},Ql.prototype.writeDoubleLE=function(e,t,l){return Wi(this,e,t,!0,l)},Ql.prototype.writeDoubleBE=function(e,t,l){return Wi(this,e,t,!1,l)},Ql.prototype.copy=function(e,t,l,i){if(l||(l=0),i||0===i||(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<l&&(i=l),i===l)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(l<0||l>=this.length)throw new RangeError("sourceStart out of bounds");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-l&&(i=e.length-t+l);var n,d=i-l;if(this===e&&l<t&&t<i)for(n=d-1;n>=0;--n)e[n+t]=this[n+l];else if(d<1e3||!Ql.TYPED_ARRAY_SUPPORT)for(n=0;n<d;++n)e[n+t]=this[n+l];else Uint8Array.prototype.set.call(e,this.subarray(l,l+d),t);return d},Ql.prototype.fill=function(e,t,l,i){if("string"==typeof e){if("string"==typeof t?(i=t,t=0,l=this.length):"string"==typeof l&&(i=l,l=this.length),1===e.length){var n=e.charCodeAt(0);n<256&&(e=n)}if(void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!Ql.isEncoding(i))throw new TypeError("Unknown encoding: "+i)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<l)throw new RangeError("Out of range index");if(l<=t)return this;var d;if(t>>>=0,l=void 0===l?this.length:l>>>0,e||(e=0),"number"==typeof e)for(d=t;d<l;++d)this[d]=e;else{var o=_l(e)?e:Ri(new Ql(e,i).toString()),c=o.length;for(d=0;d<l-t;++d)this[d+t]=o[d%c]}return this};var Vi=/[^+\/0-9A-Za-z-_]/g;function Ci(e){return e<16?"0"+e.toString(16):e.toString(16)}function Ri(e,t){var l;t=t||1/0;for(var i=e.length,n=null,d=[],o=0;o<i;++o){if((l=e.charCodeAt(o))>55295&&l<57344){if(!n){if(l>56319){(t-=3)>-1&&d.push(239,191,189);continue}if(o+1===i){(t-=3)>-1&&d.push(239,191,189);continue}n=l;continue}if(l<56320){(t-=3)>-1&&d.push(239,191,189),n=l;continue}l=65536+(n-55296<<10|l-56320)}else n&&(t-=3)>-1&&d.push(239,191,189);if(n=null,l<128){if((t-=1)<0)break;d.push(l)}else if(l<2048){if((t-=2)<0)break;d.push(l>>6|192,63&l|128)}else if(l<65536){if((t-=3)<0)break;d.push(l>>12|224,l>>6&63|128,63&l|128)}else{if(!(l<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;d.push(l>>18|240,l>>12&63|128,l>>6&63|128,63&l|128)}}return d}function Si(e){return function(e){var t,l,i,n,d,o;kl||Ul();var c=e.length;if(c%4>0)throw new Error("Invalid string. Length must be a multiple of 4");d="="===e[c-2]?2:"="===e[c-1]?1:0,o=new fl(3*c/4-d),i=d>0?c-4:c;var a=0;for(t=0,l=0;t<i;t+=4,l+=3)n=Hl[e.charCodeAt(t)]<<18|Hl[e.charCodeAt(t+1)]<<12|Hl[e.charCodeAt(t+2)]<<6|Hl[e.charCodeAt(t+3)],o[a++]=n>>16&255,o[a++]=n>>8&255,o[a++]=255&n;return 2===d?(n=Hl[e.charCodeAt(t)]<<2|Hl[e.charCodeAt(t+1)]>>4,o[a++]=255&n):1===d&&(n=Hl[e.charCodeAt(t)]<<10|Hl[e.charCodeAt(t+1)]<<4|Hl[e.charCodeAt(t+2)]>>2,o[a++]=n>>8&255,o[a++]=255&n),o}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(Vi,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Yi(e,t,l,i){for(var n=0;n<i&&!(n+l>=t.length||n>=e.length);++n)t[n+l]=e[n];return n}function vi(e){return null!=e&&(!!e._isBuffer||Ki(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&Ki(e.slice(0,0))}(e))}function Ki(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var Ni=Object.freeze({__proto__:null,Buffer:Ql,INSPECT_MAX_BYTES:50,SlowBuffer:function(e){return+e!=e&&(e=0),Ql.alloc(+e)},isBuffer:vi,kMaxLength:wl}),Ji={exports:{}},Hi={},fi={};Object.defineProperty(fi,"__esModule",{value:!0}),fi.default=function(e){var t=e.length,l=t%4;if(!l)return e;var i=t,n=4-l,d=t+n,o=Ql.alloc(d);for(o.write(e);n--;)o.write("=",i++);return o.toString()},Object.defineProperty(Hi,"__esModule",{value:!0});var ki=fi;function Ui(e,t){return void 0===t&&(t="utf8"),Ql.isBuffer(e)?Ti(e.toString("base64")):Ti(Ql.from(e,t).toString("base64"))}function Li(e){return e=e.toString(),ki.default(e).replace(/\-/g,"+").replace(/_/g,"/")}function Ti(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}var Fi=Ui;Fi.encode=Ui,Fi.decode=function(e,t){return void 0===t&&(t="utf8"),Ql.from(Li(e),"base64").toString(t)},Fi.toBase64=Li,Fi.fromBase64=Ti,Fi.toBuffer=function(e){return Ql.from(Li(e),"base64")},Hi.default=Fi,function(e){e.exports=Hi.default,e.exports.default=e.exports}(Ji);var Bi=Ji.exports,Ai={exports:{}};!function(e){!function(t,l){var i={};!function(e){e.__esModule=!0,e.digestLength=32,e.blockSize=64;var t=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);function l(e,l,i,n,d){for(var o,c,a,s,Z,r,u,b,h,m,I,G,p;d>=64;){for(o=l[0],c=l[1],a=l[2],s=l[3],Z=l[4],r=l[5],u=l[6],b=l[7],m=0;m<16;m++)I=n+4*m,e[m]=(255&i[I])<<24|(255&i[I+1])<<16|(255&i[I+2])<<8|255&i[I+3];for(m=16;m<64;m++)G=((h=e[m-2])>>>17|h<<15)^(h>>>19|h<<13)^h>>>10,p=((h=e[m-15])>>>7|h<<25)^(h>>>18|h<<14)^h>>>3,e[m]=(G+e[m-7]|0)+(p+e[m-16]|0);for(m=0;m<64;m++)G=(((Z>>>6|Z<<26)^(Z>>>11|Z<<21)^(Z>>>25|Z<<7))+(Z&r^~Z&u)|0)+(b+(t[m]+e[m]|0)|0)|0,p=((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+(o&c^o&a^c&a)|0,b=u,u=r,r=Z,Z=s+G|0,s=a,a=c,c=o,o=G+p|0;l[0]+=o,l[1]+=c,l[2]+=a,l[3]+=s,l[4]+=Z,l[5]+=r,l[6]+=u,l[7]+=b,n+=64,d-=64}return n}var i=function(){function t(){this.digestLength=e.digestLength,this.blockSize=e.blockSize,this.state=new Int32Array(8),this.temp=new Int32Array(64),this.buffer=new Uint8Array(128),this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this.reset()}return t.prototype.reset=function(){return this.state[0]=1779033703,this.state[1]=3144134277,this.state[2]=1013904242,this.state[3]=2773480762,this.state[4]=1359893119,this.state[5]=2600822924,this.state[6]=528734635,this.state[7]=1541459225,this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this},t.prototype.clean=function(){for(var e=0;e<this.buffer.length;e++)this.buffer[e]=0;for(e=0;e<this.temp.length;e++)this.temp[e]=0;this.reset()},t.prototype.update=function(e,t){if(void 0===t&&(t=e.length),this.finished)throw new Error("SHA256: can't update because hash was finished.");var i=0;if(this.bytesHashed+=t,this.bufferLength>0){for(;this.bufferLength<64&&t>0;)this.buffer[this.bufferLength++]=e[i++],t--;64===this.bufferLength&&(l(this.temp,this.state,this.buffer,0,64),this.bufferLength=0)}for(t>=64&&(i=l(this.temp,this.state,e,i,t),t%=64);t>0;)this.buffer[this.bufferLength++]=e[i++],t--;return this},t.prototype.finish=function(e){if(!this.finished){var t=this.bytesHashed,i=this.bufferLength,n=t/536870912|0,d=t<<3,o=t%64<56?64:128;this.buffer[i]=128;for(var c=i+1;c<o-8;c++)this.buffer[c]=0;this.buffer[o-8]=n>>>24&255,this.buffer[o-7]=n>>>16&255,this.buffer[o-6]=n>>>8&255,this.buffer[o-5]=n>>>0&255,this.buffer[o-4]=d>>>24&255,this.buffer[o-3]=d>>>16&255,this.buffer[o-2]=d>>>8&255,this.buffer[o-1]=d>>>0&255,l(this.temp,this.state,this.buffer,0,o),this.finished=!0}for(c=0;c<8;c++)e[4*c+0]=this.state[c]>>>24&255,e[4*c+1]=this.state[c]>>>16&255,e[4*c+2]=this.state[c]>>>8&255,e[4*c+3]=this.state[c]>>>0&255;return this},t.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},t.prototype._saveState=function(e){for(var t=0;t<this.state.length;t++)e[t]=this.state[t]},t.prototype._restoreState=function(e,t){for(var l=0;l<this.state.length;l++)this.state[l]=e[l];this.bytesHashed=t,this.finished=!1,this.bufferLength=0},t}();e.Hash=i;var n=function(){function e(e){this.inner=new i,this.outer=new i,this.blockSize=this.inner.blockSize,this.digestLength=this.inner.digestLength;var t=new Uint8Array(this.blockSize);if(e.length>this.blockSize)(new i).update(e).finish(t).clean();else for(var l=0;l<e.length;l++)t[l]=e[l];for(l=0;l<t.length;l++)t[l]^=54;this.inner.update(t);for(l=0;l<t.length;l++)t[l]^=106;this.outer.update(t),this.istate=new Uint32Array(8),this.ostate=new Uint32Array(8),this.inner._saveState(this.istate),this.outer._saveState(this.ostate);for(l=0;l<t.length;l++)t[l]=0}return e.prototype.reset=function(){return this.inner._restoreState(this.istate,this.inner.blockSize),this.outer._restoreState(this.ostate,this.outer.blockSize),this},e.prototype.clean=function(){for(var e=0;e<this.istate.length;e++)this.ostate[e]=this.istate[e]=0;this.inner.clean(),this.outer.clean()},e.prototype.update=function(e){return this.inner.update(e),this},e.prototype.finish=function(e){return this.outer.finished?this.outer.finish(e):(this.inner.finish(e),this.outer.update(e,this.digestLength).finish(e)),this},e.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},e}();function d(e){var t=(new i).update(e),l=t.digest();return t.clean(),l}function o(e,t){var l=new n(e).update(t),i=l.digest();return l.clean(),i}function c(e,t,l,i){var n=i[0];if(0===n)throw new Error("hkdf: cannot expand more");t.reset(),n>1&&t.update(e),l&&t.update(l),t.update(i),t.finish(e),i[0]++}e.HMAC=n,e.hash=d,e.default=d,e.hmac=o;var a=new Uint8Array(e.digestLength);function s(e,t,l,i){void 0===t&&(t=a),void 0===i&&(i=32);for(var d=new Uint8Array([1]),s=o(t,e),Z=new n(s),r=new Uint8Array(Z.digestLength),u=r.length,b=new Uint8Array(i),h=0;h<i;h++)u===r.length&&(c(r,Z,l,d),u=0),b[h]=r[u++];return Z.clean(),r.fill(0),d.fill(0),b}function Z(e,t,l,i){for(var d=new n(e),o=d.digestLength,c=new Uint8Array(4),a=new Uint8Array(o),s=new Uint8Array(o),Z=new Uint8Array(i),r=0;r*o<i;r++){var u=r+1;c[0]=u>>>24&255,c[1]=u>>>16&255,c[2]=u>>>8&255,c[3]=u>>>0&255,d.reset(),d.update(t),d.update(c),d.finish(s);for(var b=0;b<o;b++)a[b]=s[b];for(b=2;b<=l;b++){d.reset(),d.update(s).finish(s);for(var h=0;h<o;h++)a[h]^=s[h]}for(b=0;b<o&&r*o+b<i;b++)Z[r*o+b]=a[b]}for(r=0;r<o;r++)a[r]=s[r]=0;for(r=0;r<4;r++)c[r]=0;return d.clean(),Z}e.hkdf=s,e.pbkdf2=Z}(i);var n=i.default;for(var d in i)n[d]=i[d];e.exports=n}()}(Ai);var zi=pe(Ai.exports),wi=crypto;const xi=e=>e instanceof CryptoKey,Pi=new TextEncoder,Qi=new TextDecoder;const Mi=e=>{let t=e;t instanceof Uint8Array&&(t=Qi.decode(t)),t=t.replace(/-/g,"+").replace(/_/g,"/").replace(/\s/g,"");try{return(e=>{const t=atob(e),l=new Uint8Array(t.length);for(let e=0;e<t.length;e++)l[e]=t.charCodeAt(e);return l})(t)}catch(e){throw new TypeError("The input to be decoded is not correctly encoded.")}};class ji extends Error{constructor(e){var t;super(e),this.code="ERR_JOSE_GENERIC",this.name=this.constructor.name,null===(t=Error.captureStackTrace)||void 0===t||t.call(Error,this,this.constructor)}static get code(){return"ERR_JOSE_GENERIC"}}class Ei extends ji{constructor(e,t="unspecified",l="unspecified"){super(e),this.code="ERR_JWT_CLAIM_VALIDATION_FAILED",this.claim=t,this.reason=l}static get code(){return"ERR_JWT_CLAIM_VALIDATION_FAILED"}}class Di extends ji{constructor(e,t="unspecified",l="unspecified"){super(e),this.code="ERR_JWT_EXPIRED",this.claim=t,this.reason=l}static get code(){return"ERR_JWT_EXPIRED"}}class Oi extends ji{constructor(){super(...arguments),this.code="ERR_JOSE_ALG_NOT_ALLOWED"}static get code(){return"ERR_JOSE_ALG_NOT_ALLOWED"}}class _i extends ji{constructor(){super(...arguments),this.code="ERR_JOSE_NOT_SUPPORTED"}static get code(){return"ERR_JOSE_NOT_SUPPORTED"}}class qi extends ji{constructor(){super(...arguments),this.code="ERR_JWS_INVALID"}static get code(){return"ERR_JWS_INVALID"}}class $i extends ji{constructor(){super(...arguments),this.code="ERR_JWT_INVALID"}static get code(){return"ERR_JWT_INVALID"}}class en extends ji{constructor(){super(...arguments),this.code="ERR_JWKS_INVALID"}static get code(){return"ERR_JWKS_INVALID"}}class tn extends ji{constructor(){super(...arguments),this.code="ERR_JWKS_NO_MATCHING_KEY",this.message="no applicable key found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_NO_MATCHING_KEY"}}class ln extends ji{constructor(){super(...arguments),this.code="ERR_JWKS_MULTIPLE_MATCHING_KEYS",this.message="multiple matching keys found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_MULTIPLE_MATCHING_KEYS"}}class nn extends ji{constructor(){super(...arguments),this.code="ERR_JWS_SIGNATURE_VERIFICATION_FAILED",this.message="signature verification failed"}static get code(){return"ERR_JWS_SIGNATURE_VERIFICATION_FAILED"}}function dn(){return"function"==typeof WebSocketPair}function on(){try{return void 0!==st.versions.node}catch(e){return!1}}function cn(e,t="algorithm.name"){return new TypeError(`CryptoKey does not support this operation, its ${t} must be ${e}`)}function an(e,t){return e.name===t}function sn(e){return parseInt(e.name.slice(4),10)}function Zn(e,t,...l){switch(t){case"HS256":case"HS384":case"HS512":{if(!an(e.algorithm,"HMAC"))throw cn("HMAC");const l=parseInt(t.slice(2),10);if(sn(e.algorithm.hash)!==l)throw cn(`SHA-${l}`,"algorithm.hash");break}case"RS256":case"RS384":case"RS512":{if(!an(e.algorithm,"RSASSA-PKCS1-v1_5"))throw cn("RSASSA-PKCS1-v1_5");const l=parseInt(t.slice(2),10);if(sn(e.algorithm.hash)!==l)throw cn(`SHA-${l}`,"algorithm.hash");break}case"PS256":case"PS384":case"PS512":{if(!an(e.algorithm,"RSA-PSS"))throw cn("RSA-PSS");const l=parseInt(t.slice(2),10);if(sn(e.algorithm.hash)!==l)throw cn(`SHA-${l}`,"algorithm.hash");break}case on()&&"EdDSA":if("NODE-ED25519"!==e.algorithm.name&&"NODE-ED448"!==e.algorithm.name)throw cn("NODE-ED25519 or NODE-ED448");break;case dn()&&"EdDSA":if(!an(e.algorithm,"NODE-ED25519"))throw cn("NODE-ED25519");break;case"ES256":case"ES384":case"ES512":{if(!an(e.algorithm,"ECDSA"))throw cn("ECDSA");const l=function(e){switch(e){case"ES256":return"P-256";case"ES384":return"P-384";case"ES512":return"P-521";default:throw new Error("unreachable")}}(t);if(e.algorithm.namedCurve!==l)throw cn(l,"algorithm.namedCurve");break}default:throw new TypeError("CryptoKey does not support this operation")}!function(e,t){if(t.length&&!t.some((t=>e.usages.includes(t)))){let e="CryptoKey does not support this operation, its usages must include ";if(t.length>2){const l=t.pop();e+=`one of ${t.join(", ")}, or ${l}.`}else 2===t.length?e+=`one of ${t[0]} or ${t[1]}.`:e+=`${t[0]}.`;throw new TypeError(e)}}(e,l)}var rn=(e,...t)=>{let l="Key must be ";if(t.length>2){const e=t.pop();l+=`one of type ${t.join(", ")}, or ${e}.`}else 2===t.length?l+=`one of type ${t[0]} or ${t[1]}.`:l+=`of type ${t[0]}.`;return null==e?l+=` Received ${e}`:"function"==typeof e&&e.name?l+=` Received function ${e.name}`:"object"==typeof e&&null!=e&&e.constructor&&e.constructor.name&&(l+=` Received an instance of ${e.constructor.name}`),l},un=e=>xi(e);const bn=["CryptoKey"];function hn(e){if("object"!=typeof(t=e)||null===t||"[object Object]"!==Object.prototype.toString.call(e))return!1;var t;if(null===Object.getPrototypeOf(e))return!0;let l=e;for(;null!==Object.getPrototypeOf(l);)l=Object.getPrototypeOf(l);return Object.getPrototypeOf(e)===l}const mn=async e=>{var t,l;const{algorithm:i,keyUsages:n}=function(e){let t,l;switch(e.kty){case"oct":switch(e.alg){case"HS256":case"HS384":case"HS512":t={name:"HMAC",hash:`SHA-${e.alg.slice(-3)}`},l=["sign","verify"];break;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":throw new _i(`${e.alg} keys cannot be imported as CryptoKey instances`);case"A128GCM":case"A192GCM":case"A256GCM":case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":t={name:"AES-GCM"},l=["encrypt","decrypt"];break;case"A128KW":case"A192KW":case"A256KW":t={name:"AES-KW"},l=["wrapKey","unwrapKey"];break;case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":t={name:"PBKDF2"},l=["deriveBits"];break;default:throw new _i('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"RSA":switch(e.alg){case"PS256":case"PS384":case"PS512":t={name:"RSA-PSS",hash:`SHA-${e.alg.slice(-3)}`},l=e.d?["sign"]:["verify"];break;case"RS256":case"RS384":case"RS512":t={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${e.alg.slice(-3)}`},l=e.d?["sign"]:["verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":t={name:"RSA-OAEP",hash:`SHA-${parseInt(e.alg.slice(-3),10)||1}`},l=e.d?["decrypt","unwrapKey"]:["encrypt","wrapKey"];break;default:throw new _i('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"EC":switch(e.alg){case"ES256":t={name:"ECDSA",namedCurve:"P-256"},l=e.d?["sign"]:["verify"];break;case"ES384":t={name:"ECDSA",namedCurve:"P-384"},l=e.d?["sign"]:["verify"];break;case"ES512":t={name:"ECDSA",namedCurve:"P-521"},l=e.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":t={name:"ECDH",namedCurve:e.crv},l=e.d?["deriveBits"]:[];break;default:throw new _i('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case(dn()||on())&&"OKP":if("EdDSA"!==e.alg)throw new _i('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');switch(e.crv){case"Ed25519":t={name:"NODE-ED25519",namedCurve:"NODE-ED25519"},l=e.d?["sign"]:["verify"];break;case on()&&"Ed448":t={name:"NODE-ED448",namedCurve:"NODE-ED448"},l=e.d?["sign"]:["verify"];break;default:throw new _i('Invalid or unsupported JWK "crv" (Subtype of Key Pair) Parameter value')}break;default:throw new _i('Invalid or unsupported JWK "kty" (Key Type) Parameter value')}return{algorithm:t,keyUsages:l}}(e),d=[i,null!==(t=e.ext)&&void 0!==t&&t,null!==(l=e.key_ops)&&void 0!==l?l:n];if("PBKDF2"===i.name)return wi.subtle.importKey("raw",Mi(e.k),...d);const o={...e};return delete o.alg,wi.subtle.importKey("jwk",o,...d)};const In=(e,t,l)=>{e.startsWith("HS")||"dir"===e||e.startsWith("PBES2")||/^A\d{3}(?:GCM)?KW$/.test(e)?(e=>{if(!(e instanceof Uint8Array)){if(!un(e))throw new TypeError(rn(e,...bn,"Uint8Array"));if("secret"!==e.type)throw new TypeError(`${bn.join(" or ")} instances for symmetric algorithms must be of type "secret"`)}})(t):((e,t)=>{if(!un(e))throw new TypeError(rn(e,...bn));if("secret"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);if("sign"===t&&"public"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);if("decrypt"===t&&"public"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);if(e.algorithm&&"verify"===t&&"private"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);if(e.algorithm&&"encrypt"===t&&"private"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`)})(t,l)};const Gn=async(e,t,l,i)=>{const n=await function(e,t,l){if(xi(t))return Zn(t,e,l),t;if(t instanceof Uint8Array){if(!e.startsWith("HS"))throw new TypeError(rn(t,...bn));return wi.subtle.importKey("raw",t,{hash:`SHA-${e.slice(-3)}`,name:"HMAC"},!1,[l])}throw new TypeError(rn(t,...bn,"Uint8Array"))}(e,t,"verify");((e,t)=>{if(e.startsWith("RS")||e.startsWith("PS")){const{modulusLength:l}=t.algorithm;if("number"!=typeof l||l<2048)throw new TypeError(`${e} requires key modulusLength to be 2048 bits or larger`)}})(e,n);const d=function(e,t){const l=`SHA-${e.slice(-3)}`;switch(e){case"HS256":case"HS384":case"HS512":return{hash:l,name:"HMAC"};case"PS256":case"PS384":case"PS512":return{hash:l,name:"RSA-PSS",saltLength:e.slice(-3)>>3};case"RS256":case"RS384":case"RS512":return{hash:l,name:"RSASSA-PKCS1-v1_5"};case"ES256":case"ES384":case"ES512":return{hash:l,name:"ECDSA",namedCurve:t.namedCurve};case(dn()||on())&&"EdDSA":const{namedCurve:i}=t;return{name:i,namedCurve:i};default:throw new _i(`alg ${e} is not supported either by JOSE or your javascript runtime`)}}(e,n.algorithm);try{return await wi.subtle.verify(d,n,l,i)}catch(e){return!1}};async function pn(e,t,l){var i;if(!hn(e))throw new qi("Flattened JWS must be an object");if(void 0===e.protected&&void 0===e.header)throw new qi('Flattened JWS must have either of the "protected" or "header" members');if(void 0!==e.protected&&"string"!=typeof e.protected)throw new qi("JWS Protected Header incorrect type");if(void 0===e.payload)throw new qi("JWS Payload missing");if("string"!=typeof e.signature)throw new qi("JWS Signature missing or incorrect type");if(void 0!==e.header&&!hn(e.header))throw new qi("JWS Unprotected Header incorrect type");let n={};if(e.protected){const t=Mi(e.protected);try{n=JSON.parse(Qi.decode(t))}catch(e){throw new qi("JWS Protected Header is invalid")}}if(!((...e)=>{const t=e.filter(Boolean);if(0===t.length||1===t.length)return!0;let l;for(const e of t){const t=Object.keys(e);if(l&&0!==l.size)for(const e of t){if(l.has(e))return!1;l.add(e)}else l=new Set(t)}return!0})(n,e.header))throw new qi("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const d={...n,...e.header},o=function(e,t,l,i,n){if(void 0!==n.crit&&void 0===i.crit)throw new e('"crit" (Critical) Header Parameter MUST be integrity protected');if(!i||void 0===i.crit)return new Set;if(!Array.isArray(i.crit)||0===i.crit.length||i.crit.some((e=>"string"!=typeof e||0===e.length)))throw new e('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');let d;d=void 0!==l?new Map([...Object.entries(l),...t.entries()]):t;for(const t of i.crit){if(!d.has(t))throw new _i(`Extension Header Parameter "${t}" is not recognized`);if(void 0===n[t])throw new e(`Extension Header Parameter "${t}" is missing`);if(d.get(t)&&void 0===i[t])throw new e(`Extension Header Parameter "${t}" MUST be integrity protected`)}return new Set(i.crit)}(qi,new Map([["b64",!0]]),null==l?void 0:l.crit,n,d);let c=!0;if(o.has("b64")&&(c=n.b64,"boolean"!=typeof c))throw new qi('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:a}=d;if("string"!=typeof a||!a)throw new qi('JWS "alg" (Algorithm) Header Parameter missing or invalid');const s=l&&((e,t)=>{if(void 0!==t&&(!Array.isArray(t)||t.some((e=>"string"!=typeof e))))throw new TypeError(`"${e}" option must be an array of strings`);if(t)return new Set(t)})("algorithms",l.algorithms);if(s&&!s.has(a))throw new Oi('"alg" (Algorithm) Header Parameter not allowed');if(c){if("string"!=typeof e.payload)throw new qi("JWS Payload must be a string")}else if("string"!=typeof e.payload&&!(e.payload instanceof Uint8Array))throw new qi("JWS Payload must be a string or an Uint8Array instance");let Z=!1;"function"==typeof t&&(t=await t(n,e),Z=!0),In(a,t,"verify");const r=function(...e){const t=e.reduce(((e,{length:t})=>e+t),0),l=new Uint8Array(t);let i=0;return e.forEach((e=>{l.set(e,i),i+=e.length})),l}(Pi.encode(null!==(i=e.protected)&&void 0!==i?i:""),Pi.encode("."),"string"==typeof e.payload?Pi.encode(e.payload):e.payload),u=Mi(e.signature);if(!await Gn(a,t,u,r))throw new nn;let b;b=c?Mi(e.payload):"string"==typeof e.payload?Pi.encode(e.payload):e.payload;const h={payload:b};return void 0!==e.protected&&(h.protectedHeader=n),void 0!==e.header&&(h.unprotectedHeader=e.header),Z?{...h,key:t}:h}const gn=86400,Xn=/^(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;var yn=e=>{const t=Xn.exec(e);if(!t)throw new TypeError("Invalid time period format");const l=parseFloat(t[1]);switch(t[2].toLowerCase()){case"sec":case"secs":case"second":case"seconds":case"s":return Math.round(l);case"minute":case"minutes":case"min":case"mins":case"m":return Math.round(60*l);case"hour":case"hours":case"hr":case"hrs":case"h":return Math.round(3600*l);case"day":case"days":case"d":return Math.round(l*gn);case"week":case"weeks":case"w":return Math.round(604800*l);default:return Math.round(31557600*l)}};const Wn=e=>e.toLowerCase().replace(/^application\//,"");var Vn=(e,t,l={})=>{const{typ:i}=l;if(i&&("string"!=typeof e.typ||Wn(e.typ)!==Wn(i)))throw new Ei('unexpected "typ" JWT header value',"typ","check_failed");let n;try{n=JSON.parse(Qi.decode(t))}catch(e){}if(!hn(n))throw new $i("JWT Claims Set must be a top-level JSON object");const{issuer:d}=l;if(d&&!(Array.isArray(d)?d:[d]).includes(n.iss))throw new Ei('unexpected "iss" claim value',"iss","check_failed");const{subject:o}=l;if(o&&n.sub!==o)throw new Ei('unexpected "sub" claim value',"sub","check_failed");const{audience:c}=l;if(c&&(a=n.aud,s="string"==typeof c?[c]:c,!("string"==typeof a?s.includes(a):Array.isArray(a)&&s.some(Set.prototype.has.bind(new Set(a))))))throw new Ei('unexpected "aud" claim value',"aud","check_failed");var a,s;let Z;switch(typeof l.clockTolerance){case"string":Z=yn(l.clockTolerance);break;case"number":Z=l.clockTolerance;break;case"undefined":Z=0;break;default:throw new TypeError("Invalid clockTolerance option type")}const{currentDate:r}=l,u=(b=r||new Date,Math.floor(b.getTime()/1e3));var b;if((void 0!==n.iat||l.maxTokenAge)&&"number"!=typeof n.iat)throw new Ei('"iat" claim must be a number',"iat","invalid");if(void 0!==n.nbf){if("number"!=typeof n.nbf)throw new Ei('"nbf" claim must be a number',"nbf","invalid");if(n.nbf>u+Z)throw new Ei('"nbf" claim timestamp check failed',"nbf","check_failed")}if(void 0!==n.exp){if("number"!=typeof n.exp)throw new Ei('"exp" claim must be a number',"exp","invalid");if(n.exp<=u-Z)throw new Di('"exp" claim timestamp check failed',"exp","check_failed")}if(l.maxTokenAge){const e=u-n.iat;if(e-Z>("number"==typeof l.maxTokenAge?l.maxTokenAge:yn(l.maxTokenAge)))throw new Di('"iat" claim timestamp check failed (too far in the past)',"iat","check_failed");if(e<0-Z)throw new Ei('"iat" claim timestamp check failed (it should be in the past)',"iat","check_failed")}return n};async function Cn(e,t,l){var i;const n=await async function(e,t,l){if(e instanceof Uint8Array&&(e=Qi.decode(e)),"string"!=typeof e)throw new qi("Compact JWS must be a string or Uint8Array");const{0:i,1:n,2:d,length:o}=e.split(".");if(3!==o)throw new qi("Invalid Compact JWS");const c=await pn({payload:n,protected:i,signature:d},t,l),a={payload:c.payload,protectedHeader:c.protectedHeader};return"function"==typeof t?{...a,key:c.key}:a}(e,t,l);if((null===(i=n.protectedHeader.crit)||void 0===i?void 0:i.includes("b64"))&&!1===n.protectedHeader.b64)throw new $i("JWTs MUST NOT use unencoded payload");const d={payload:Vn(n.protectedHeader,n.payload,l),protectedHeader:n.protectedHeader};return"function"==typeof t?{...d,key:n.key}:d}function Rn(e){return hn(e)}class Sn{constructor(e){if(this._cached=new WeakMap,!function(e){return e&&"object"==typeof e&&Array.isArray(e.keys)&&e.keys.every(Rn)}(e))throw new en("JSON Web Key Set malformed");var t;this._jwks=(t=e,"function"==typeof structuredClone?structuredClone(t):JSON.parse(JSON.stringify(t)))}async getKey(e,t){const{alg:l,kid:i}={...e,...t.header},n=function(e){switch("string"==typeof e&&e.slice(0,2)){case"RS":case"PS":return"RSA";case"ES":return"EC";case"Ed":return"OKP";default:throw new _i('Unsupported "alg" value for a JSON Web Key Set')}}(l),d=this._jwks.keys.filter((e=>{let t=n===e.kty;if(t&&"string"==typeof i&&(t=i===e.kid),t&&"string"==typeof e.alg&&(t=l===e.alg),t&&"string"==typeof e.use&&(t="sig"===e.use),t&&Array.isArray(e.key_ops)&&(t=e.key_ops.includes("verify")),t&&"EdDSA"===l&&(t="Ed25519"===e.crv||"Ed448"===e.crv),t)switch(l){case"ES256":t="P-256"===e.crv;break;case"ES256K":t="secp256k1"===e.crv;break;case"ES384":t="P-384"===e.crv;break;case"ES512":t="P-521"===e.crv}return t})),{0:o,length:c}=d;if(0===c)throw new tn;if(1!==c)throw new ln;const a=this._cached.get(o)||this._cached.set(o,{}).get(o);if(void 0===a[l]){const e=await async function(e,t,l){if(!hn(e))throw new TypeError("JWK must be an object");if(t||(t=e.alg),"string"!=typeof t||!t)throw new TypeError('"alg" argument is required when "jwk.alg" is not present');switch(e.kty){case"oct":if("string"!=typeof e.k||!e.k)throw new TypeError('missing "k" (Key Value) Parameter value');return null!=l||(l=!0!==e.ext),l?mn({...e,alg:t,ext:!1}):Mi(e.k);case"RSA":if(void 0!==e.oth)throw new _i('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');case"EC":case"OKP":return mn({...e,alg:t});default:throw new _i('Unsupported "kty" (Key Type) Parameter value')}}({...o,ext:!0},l);if(e instanceof Uint8Array||"public"!==e.type)throw new en("JSON Web Key Set members must be public keys");a[l]=e}return a[l]}}var Yn={exports:{}},vn={exports:{}},Kn=ge(Ni);
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
!function(e,t){var l=Kn,i=l.Buffer;function n(e,t){for(var l in e)t[l]=e[l]}function d(e,t,l){return i(e,t,l)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?e.exports=l:(n(l,t),t.Buffer=d),d.prototype=Object.create(i.prototype),n(i,d),d.from=function(e,t,l){if("number"==typeof e)throw new TypeError("Argument must not be a number");return i(e,t,l)},d.alloc=function(e,t,l){if("number"!=typeof e)throw new TypeError("Argument must be a number");var n=i(e);return void 0!==t?"string"==typeof l?n.fill(t,l):n.fill(t):n.fill(0),n},d.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i(e)},d.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return l.SlowBuffer(e)}}(vn,vn.exports);var Nn=65536,Jn=4294967295;var Hn=vn.exports.Buffer,fn=Ge.crypto||Ge.msCrypto;fn&&fn.getRandomValues?Yn.exports=function(e,t){if(e>Jn)throw new RangeError("requested too many random bytes");var l=Hn.allocUnsafe(e);if(e>0)if(e>Nn)for(var i=0;i<e;i+=Nn)fn.getRandomValues(l.slice(i,i+Nn));else fn.getRandomValues(l);if("function"==typeof t)return st.nextTick((function(){t(null,l)}));return l}:Yn.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")};var kn=Yn.exports;class Un{base64URLEncode(e){return Bi.encode(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}base64URLDecode(e){return Bi.decode(e).toString()}hashSha256(e){return Ql.from(zi((new TextEncoder).encode(e)))}generateRandomBytes(e){return kn(e)}verifyJwt(e,t,l,i,n,d,o){return Cn(e,(c={keys:[t]},Sn.prototype.getKey.bind(new Sn(c))),{algorithms:l,audience:i,clockTolerance:o,issuer:n,subject:d}).then((()=>Promise.resolve(!0)));var c}}const Ln=(l,i)=>t(void 0,void 0,void 0,(function*(){var n;const c=(t=>{switch(t){case e.Storage.LocalStorage:return new vl;case e.Storage.SessionStorage:return new Nl;case e.Storage.BrowserMemory:return new Kl;default:return new Nl}})(l.storage),a=new Un,Z=new p(c,a);yield Z.initialize(l);const r=new be(Z),b=Z.getDataLayer(),h=yield Ie((()=>t(void 0,void 0,void 0,(function*(){return Z.getSignOutURL()}))),null!==(n=l.storage)&&void 0!==n?n:e.Storage.SessionStorage,(e=>b.setSessionDataParameter(o,null!=e?e:""))),m=i(Z,r);let I=!1;const G=Yl.getInstance();let g,X,y=!0;(null==G?void 0:G.init)&&(yield G.init(!0,(e=>t(void 0,void 0,void 0,(function*(){const t=Object.assign({attachToken:!0},e);t.attachToken&&(t.shouldAttachIDPAccessToken?e.headers=Object.assign(Object.assign({},e.headers),{Authorization:`Bearer ${yield m.getIDPAccessToken()}`}):e.headers=Object.assign(Object.assign({},e.headers),{Authorization:`Bearer ${yield m.getAccessToken()}`}))})))));const W=()=>t(void 0,void 0,void 0,(function*(){const e=yield Z.getOIDCServiceEndpoints(),l=yield b.getConfigData();m.initializeSessionManger(l,e,(()=>t(void 0,void 0,void 0,(function*(){return(yield Z.getBasicUserInfo()).sessionState}))),(e=>t(void 0,void 0,void 0,(function*(){return Z.getAuthorizationURL(e)}))),h)})),V=()=>t(void 0,void 0,void 0,(function*(){return yield h.receivePromptNoneResponse((e=>t(void 0,void 0,void 0,(function*(){yield b.setSessionDataParameter(o,null!=e?e:"")}))))})),C=e=>{e.preventSignOutURLUpdate&&(I=!0)},R=(e,l,i)=>t(void 0,void 0,void 0,(function*(){return yield m.requestAccessToken(e,l,W,void 0,i)})),S=()=>t(void 0,void 0,void 0,(function*(){const t=yield b.getConfigData(),l=yield Z.getAuthorizationURL({prompt:"none",state:ne}),i=new URL(l);i.searchParams.set("response_mode","query");const n=i.toString();if(t.storage===e.Storage.BrowserMemory&&t.enablePKCE){const e=i.searchParams.get(s);me.setPKCE(u.extractPKCEKeyFromStateParam(null!=e?e:""),yield Z.getPKCECode(null!=e?e:""))}return n}));return{disableHttpHandler:()=>(m.disableHttpHandler(G),y=!1,!0),enableHttpHandler:()=>(m.enableHttpHandler(G),y=!0,!0),getAccessToken:()=>t(void 0,void 0,void 0,(function*(){return m.getAccessToken()})),getBasicUserInfo:()=>t(void 0,void 0,void 0,(function*(){return m.getBasicUserInfo()})),getCryptoHelper:()=>t(void 0,void 0,void 0,(function*(){return m.getCryptoHelper()})),getDataLayer:()=>t(void 0,void 0,void 0,(function*(){return m.getDataLayer()})),getDecodedIDToken:()=>t(void 0,void 0,void 0,(function*(){return m.getDecodedIDToken()})),getHttpClient:()=>G,getIDToken:()=>t(void 0,void 0,void 0,(function*(){return m.getIDToken()})),getOIDCServiceEndpoints:()=>t(void 0,void 0,void 0,(function*(){return m.getOIDCServiceEndpoints()})),httpRequest:e=>t(void 0,void 0,void 0,(function*(){return yield m.httpRequest(G,e,y,g,X)})),httpRequestAll:e=>t(void 0,void 0,void 0,(function*(){return yield m.httpRequestAll(e,G,y,g,X)})),isAuthenticated:()=>t(void 0,void 0,void 0,(function*(){return m.isAuthenticated()})),refreshAccessToken:()=>t(void 0,void 0,void 0,(function*(){try{return yield m.refreshAccessToken(C)}catch(e){return Promise.reject(e)}})),requestCustomGrant:e=>t(void 0,void 0,void 0,(function*(){return yield m.requestCustomGrant(e,C)})),revokeAccessToken:()=>Z.revokeAccessToken().then((()=>(h.reset(),r.clearRefreshTokenTimeout(),Promise.resolve(!0)))).catch((e=>Promise.reject(e))),setHttpRequestErrorCallback:e=>{g=e},setHttpRequestFinishCallback:e=>{(null==G?void 0:G.setHttpRequestFinishCallback)&&G.setHttpRequestFinishCallback(e)},setHttpRequestStartCallback:e=>{(null==G?void 0:G.setHttpRequestStartCallback)&&G.setHttpRequestStartCallback(e)},setHttpRequestSuccessCallback:e=>{(null==G?void 0:G.setHttpRequestSuccessCallback)&&G.setHttpRequestSuccessCallback(e)},signIn:(i,n,c,a)=>t(void 0,void 0,void 0,(function*(){var r,b,h;const I=yield m.handleSignIn(V,W);if(I)return I;{let m,I,G;return(null==l?void 0:l.responseMode)===e.ResponseMode.formPost&&n?(m=n,I=null!=c?c:"",G=null!=a?a:""):(m=null!==(r=new URL(window.location.href).searchParams.get(d))&&void 0!==r?r:"",I=null!==(b=new URL(window.location.href).searchParams.get(o))&&void 0!==b?b:"",G=null!==(h=new URL(window.location.href).searchParams.get(s))&&void 0!==h?h:"",me.removeAuthorizationCode()),m&&G?R(m,I,G):Z.getAuthorizationURL(i).then((i=>t(void 0,void 0,void 0,(function*(){if(l.storage===e.Storage.BrowserMemory&&l.enablePKCE){const e=u.extractPKCEKeyFromStateParam(G);me.setPKCE(e,yield Z.getPKCECode(G))}return location.href=i,yield me.waitTillPageRedirect(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""})}))))}})),signOut:()=>t(void 0,void 0,void 0,(function*(){return(yield Z.isAuthenticated())&&!I?location.href=yield Z.getSignOutURL():(location.href=me.getSignOutURL(),yield b.removeOIDCProviderMetaData(),yield b.removeTemporaryData(),yield b.removeSessionData()),r.clearRefreshTokenTimeout(),yield me.waitTillPageRedirect(),!0})),trySignInSilently:()=>t(void 0,void 0,void 0,(function*(){return yield m.trySignInSilently(S,R,h)})),updateConfig:e=>t(void 0,void 0,void 0,(function*(){const t=yield b.getConfigData(),l=!(t&&t.endpoints&&t.endpoints.checkSessionIframe&&e&&e.endpoints&&e.endpoints.checkSessionIframe&&t.endpoints.checkSessionIframe===e.endpoints.checkSessionIframe),i=Object.assign(Object.assign({},t),e);yield Z.updateConfig(i),i.enableOIDCSessionManagement&&l&&(h.reset(),W())}))}})),Tn=(l,i,n)=>t(void 0,void 0,void 0,(function*(){var c;let a;const Z=null!==(c=null==l?void 0:l.requestTimeout)&&void 0!==c?c:6e4;let b=!0,h=!1;const m=(t=>{switch(t){case e.Storage.LocalStorage:return new vl;case e.Storage.SessionStorage:return new Nl;case e.Storage.BrowserMemory:return new Kl;default:return new Nl}})(l.storage),I=new Un,G=new p(m,I);yield G.initialize(l);const g=new be(G),X=yield Ie((()=>t(void 0,void 0,void 0,(function*(){const e={type:S};try{return yield V(e)}catch(e){return me.getSignOutURL()}}))),l.storage,(e=>C(e))),y=n(G,g),W=new i,V=e=>{const t=new MessageChannel;return W.postMessage(e,[t.port2]),new Promise(((e,l)=>{const i=setTimeout((()=>{l(new r("SPA-WEB_WORKER_CLIENT-COM-TO01","Operation timed out.","No response was received from the web worker for "+Z/1e3+" since dispatching the request"))}),Z);return t.port1.onmessage=({data:t})=>{if(clearTimeout(i),null==t?void 0:t.success){const l=(null==t?void 0:t.data)?JSON.parse(null==t?void 0:t.data):null;(null==t?void 0:t.blob)&&(l.data=null==t?void 0:t.blob),e(l)}else l(t.error?JSON.parse(t.error):null)}}))},C=e=>V({data:e,type:Q}),D=()=>V({type:M}),O=()=>t(void 0,void 0,void 0,(function*(){const e=yield ie(),l=yield de();y.initializeSessionManger(l,e,(()=>t(void 0,void 0,void 0,(function*(){return(yield oe()).sessionState}))),(e=>t(void 0,void 0,void 0,(function*(){return(yield $(e)).authorizationURL}))),X)})),q=()=>t(void 0,void 0,void 0,(function*(){var e;const t=yield de(),l={data:{prompt:"none",state:ne},type:A},i=yield V(l),n=u.extractPKCEKeyFromStateParam(null!==(e=new URL(i.authorizationURL).searchParams.get(s))&&void 0!==e?e:"");i.pkce&&t.enablePKCE&&me.setPKCE(n,i.pkce);const d=i.authorizationURL,o=new URL(d);o.searchParams.set("response_mode","query");return o.toString()})),$=e=>t(void 0,void 0,void 0,(function*(){const l=yield de();return V({data:e,type:A}).then((e=>t(void 0,void 0,void 0,(function*(){var t;if(e.pkce&&l.enablePKCE){const l=u.extractPKCEKeyFromStateParam(null!==(t=new URL(e.authorizationURL).searchParams.get(s))&&void 0!==t?t:"");me.setPKCE(l,e.pkce)}return Promise.resolve(e)}))))})),ee=(e,l,i)=>t(void 0,void 0,void 0,(function*(){const t=yield de(),n=u.extractPKCEKeyFromStateParam(i),d={data:{code:e,pkce:t.enablePKCE?me.getPKCE(n):void 0,sessionState:l,state:i},type:z};return t.enablePKCE&&me.removePKCE(n),V(d).then((e=>V({type:x}).then((l=>(me.setSignOutURL(l),t.enableOIDCSessionManagement&&O(),D(),Promise.resolve(e)))).catch((e=>Promise.reject(e))))).catch((e=>Promise.reject(e)))})),te=()=>t(void 0,void 0,void 0,(function*(){return yield X.receivePromptNoneResponse((e=>t(void 0,void 0,void 0,(function*(){return C(e)}))))})),le=()=>t(void 0,void 0,void 0,(function*(){if(yield ce())return yield D(),l.enableOIDCSessionManagement&&O(),oe()})),ie=()=>V({type:k}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),de=()=>V({type:_}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),oe=()=>V({type:U}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),ce=()=>V({type:w}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e)));return{disableHttpHandler:()=>V({type:B}).then((()=>(b=!1,Promise.resolve(!0)))).catch((e=>Promise.reject(e))),enableHttpHandler:()=>V({type:F}).then((()=>(b=!0,Promise.resolve(!0)))).catch((e=>Promise.reject(e))),getBasicUserInfo:oe,getCryptoHelper:()=>V({type:T}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getDecodedIDPIDToken:()=>V({type:"get-decoded-idp-id-token"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getDecodedIDToken:()=>V({type:L}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getIDToken:()=>V({type:E}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getOIDCServiceEndpoints:ie,httpRequest:e=>V({data:e,type:Y}).then((e=>Promise.resolve(e))).catch((e=>t(void 0,void 0,void 0,(function*(){return b&&("function"==typeof a.requestErrorCallback&&(yield a.requestErrorCallback(e)),"function"==typeof a.requestFinishCallback&&a.requestFinishCallback()),Promise.reject(e)})))),httpRequestAll:e=>V({data:e,type:v}).then((e=>Promise.resolve(e))).catch((e=>t(void 0,void 0,void 0,(function*(){return b&&("function"==typeof a.requestErrorCallback&&(yield a.requestErrorCallback(e)),"function"==typeof a.requestFinishCallback&&a.requestFinishCallback()),Promise.reject(e)})))),initialize:()=>{a||(a={requestErrorCallback:()=>Promise.resolve(),requestFinishCallback:()=>null,requestStartCallback:()=>null,requestSuccessCallback:()=>null}),W.onmessage=({data:e})=>{switch(e.type){case f:(null==a?void 0:a.requestFinishCallback)&&(null==a||a.requestFinishCallback());break;case J:(null==a?void 0:a.requestStartCallback)&&(null==a||a.requestStartCallback());break;case H:(null==a?void 0:a.requestSuccessCallback)&&(null==a||a.requestSuccessCallback(e.data?JSON.parse(e.data):null))}};return V({data:l,type:R}).then((()=>Promise.resolve(!0))).catch((e=>Promise.reject(e)))},isAuthenticated:ce,refreshAccessToken:()=>V({type:P}),requestCustomGrant:e=>V({data:e,type:K}).then((t=>(e.preventSignOutURLUpdate&&(h=!0),Promise.resolve(t)))).catch((e=>Promise.reject(e))),revokeAccessToken:()=>V({type:N}).then((e=>(X.reset(),Promise.resolve(e)))).catch((e=>Promise.reject(e))),setHttpRequestErrorCallback:e=>{e&&"function"==typeof e&&(a.requestErrorCallback=e)},setHttpRequestFinishCallback:e=>{e&&"function"==typeof e&&(a.requestFinishCallback=e)},setHttpRequestStartCallback:e=>{e&&"function"==typeof e&&(a.requestStartCallback=e)},setHttpRequestSuccessCallback:e=>{e&&"function"==typeof e&&(a.requestSuccessCallback=e)},signIn:(i,n,c,a)=>t(void 0,void 0,void 0,(function*(){var Z,r,u;const b=yield y.handleSignIn(te,O,le);if(b)return b;{let b,h,m;return(null==l?void 0:l.responseMode)===e.ResponseMode.formPost&&n?(b=n,h=null!=c?c:"",m=null!=a?a:""):(b=null!==(Z=new URL(window.location.href).searchParams.get(d))&&void 0!==Z?Z:"",h=null!==(r=new URL(window.location.href).searchParams.get(o))&&void 0!==r?r:"",m=null!==(u=new URL(window.location.href).searchParams.get(s))&&void 0!==u?u:"",me.removeAuthorizationCode()),b&&m?ee(b,h,m):$(i).then((e=>t(void 0,void 0,void 0,(function*(){return location.href=e.authorizationURL,yield me.waitTillPageRedirect(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""})})))).catch((e=>Promise.reject(e)))}})),signOut:()=>ce().then((e=>t(void 0,void 0,void 0,(function*(){if(e&&!h){return V({type:S}).then((e=>t(void 0,void 0,void 0,(function*(){return window.location.href=e,yield me.waitTillPageRedirect(),Promise.resolve(!0)})))).catch((e=>Promise.reject(e)))}return window.location.href=me.getSignOutURL(),yield me.waitTillPageRedirect(),Promise.resolve(!0)})))).catch((e=>Promise.reject(e))),trySignInSilently:()=>t(void 0,void 0,void 0,(function*(){return yield y.trySignInSilently(q,ee,X)})),updateConfig:e=>t(void 0,void 0,void 0,(function*(){const t=yield de(),l=!(t&&t.endpoints&&t.endpoints.checkSessionIframe&&e&&e.endpoints&&e.endpoints.checkSessionIframe&&t.endpoints.checkSessionIframe===e.endpoints.checkSessionIframe),i=Object.assign(Object.assign({},t),e),n={data:i,type:j};yield V(n),i.enableOIDCSessionManagement&&l&&(X.reset(),O())}))}})),Fn={checkSessionInterval:3,clientHost:origin,enableOIDCSessionManagement:!1,sessionRefreshInterval:300,storage:e.Storage.SessionStorage},Bn="primaryInstance";class An{constructor(e){this._authHelper=ue,this._worker=C,this._initialized=!1,this._startedInitialize=!1,this._onSignInCallback=()=>null,this._onSignOutCallback=()=>null,this._onSignOutFailedCallback=()=>null,this._onEndUserSession=()=>null,this._onInitialize=()=>null,this._onCustomGrant=new Map,this._instanceID=e}instantiateAuthHelper(e){this._authHelper=e||ue}instantiateWorker(e){this._worker=e||C}_isInitialized(){return t(this,void 0,void 0,(function*(){if(!this._startedInitialize)return!1;let e=0;for(;!this._initialized;)1e4===e&&console.warn("It is taking longer than usual for the object to be initialized"),yield new Promise((e=>setTimeout(e,1))),e++;return!0}))}_validateMethod(){return t(this,void 0,void 0,(function*(){return(yield this._isInitialized())&&!!(yield this.isAuthenticated())||Promise.reject()}))}
/**
         * This method returns the instance of the singleton class.
         *
         * @return {AsgardeoSPAClient} - Returns the instance of the singleton class.
         *
         * @example
         * ```
         * const auth = AsgardeoSPAClient.getInstance();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getinstance
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */static getInstance(e){var t,l;return e&&(null===(t=this._instances)||void 0===t?void 0:t.get(e))?this._instances.get(e):!e&&(null===(l=this._instances)||void 0===l?void 0:l.get(Bn))?this._instances.get(Bn):e?(this._instances.set(e,new An(e)),this._instances.get(e)):(this._instances.set(Bn,new An(Bn)),this._instances.get(Bn))}
/**
         * This method initializes the `AsgardeoSPAClient` instance.
         *
         * @param {ConfigInterface} config The config object to initialize with.
         *
         * @return {Promise<boolean>} - Resolves to `true` if initialization is successful.
         *
         * @example
         * ```
         * auth.initialize({
         *     signInRedirectURL: "http://localhost:3000/sign-in",
         *     clientID: "client ID",
         *     baseUrl: "https://api.asgardeo.io"
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#initialize
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */initialize(l,i,n){var d;return t(this,void 0,void 0,(function*(){if(this._storage=null!==(d=l.storage)&&void 0!==d?d:e.Storage.SessionStorage,this._initialized=!1,this._startedInitialize=!0,i&&this.instantiateAuthHelper(i),n&&this.instantiateWorker(n),this._storage!==e.Storage.WebWorker){if(!this._client){const e=l,t=Object.assign({},Fn);this._client=yield Ln(Object.assign(Object.assign({},t),e),((e,t)=>new this._authHelper(e,t)))}return this._initialized=!0,this._onInitialize&&this._onInitialize(!0),Promise.resolve(!0)}if(!this._client){const e=l;return this._client=yield Tn(Object.assign(Object.assign({},Fn),e),this._worker,((e,t)=>new this._authHelper(e,t))),this._client.initialize().then((()=>(this._onInitialize&&this._onInitialize(!0),this._initialized=!0,Promise.resolve(!0)))).catch((e=>Promise.reject(e)))}return Promise.resolve(!0)}))}
/**
         * This method returns a Promise that resolves with the basic user information obtained from the ID token.
         *
         * @return {Promise<BasicUserInfo>} - A promise that resolves with the user information.
         *
         * @example
         * ```
         * auth.getBasicUserInfo().then((response) => {
         *    // console.log(response);
         * }).catch((error) => {
         *    // console.error(error);
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getuserinfo
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getBasicUserInfo(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.getBasicUserInfo()}))}
/**
         * This method initiates the authentication flow. This should be called twice.
         *  1. To initiate the authentication flow.
         *  2. To obtain the access token after getting the authorization code.
         *
         * To satisfy the second condition, one of the two strategies mentioned below can be used:
         *  1. Redirect the user back to the same login page that initiated the authentication flow.
         *  2. Call the `signIn()` method in the page the user is redirected to after authentication.
         *
         * **To fire a callback function after signing in, use the `on()` method.**
         * **To learn more about the `on()` method:**
         * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}
         *
         * @param {SignInConfig} config - The sign-in config.
         * The `SignInConfig` object has these two attributes in addition to any custom key-value pairs.
         *  1. fidp - Specifies the FIDP parameter that is used to take the user directly to an IdP login page.
         *  2. forceInit: Specifies if the OIDC Provider Meta Data should be loaded again from the `well-known`
         * endpoint.
         *  3. Any other parameters that should be appended to the authorization request.
         * @param {string} authorizationCode - The authorization code. (Optional)
         * @param {string} sessionState - The session state. (Optional)
         * @param {string} state - The state. (Optional)
         *
         * @return {Promise<BasicUserInfo>} - A promise that resolves with the user information.
         *
         * @example
         * ```
         * auth.signIn();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#signin
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */signIn(e,l,i,n){var d;return t(this,void 0,void 0,(function*(){if(yield this._isInitialized(),me.canContinueSignIn(Boolean(null==e?void 0:e.callOnlyOnRedirect),l))return null==e||delete e.callOnlyOnRedirect,null===(d=this._client)||void 0===d?void 0:d.signIn(e,l,i,n).then((e=>(this._onSignInCallback&&(e.allowedScopes||e.displayName||e.email||e.username)&&this._onSignInCallback(e),e)))}))}trySignInSilently(){var e;return t(this,void 0,void 0,(function*(){if(yield this._isInitialized(),!me.wasSignInCalled())return null===(e=this._client)||void 0===e?void 0:e.trySignInSilently().then((e=>{if(this._onSignInCallback&&e){const t=e;(t.allowedScopes||t.displayName||t.email||t.username)&&this._onSignInCallback(t)}return e}))}))}
/**
         * This method initiates the sign-out flow.
         *
         * **To fire a callback function after signing out, use the `on()` method.**
         * **To learn more about the `on()` method:**
         * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}
         *
         * @return {Promise<boolean>} - Returns a promise that resolves with `true` if sign out is successful.
         *
         * @example
         * ```
         * auth.signOut();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#signout
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */signOut(){var e,l;return t(this,void 0,void 0,(function*(){yield this._validateMethod();return null!==(l=yield null===(e=this._client)||void 0===e?void 0:e.signOut())&&void 0!==l&&l}))}
/**
         * This method sends an API request to a protected endpoint.
         * The access token is automatically attached to the header of the request.
         * This is the only way by which protected endpoints can be accessed
         * when the web worker is used to store session information.
         *
         * @param {HttpRequestConfig} config -  The config object containing attributes necessary to send a request.
         *
         * @return {Promise<HttpResponse>} - Returns a Promise that resolves with the response to the request.
         *
         * @example
         * ```
         *  const requestConfig = {
         *      headers: {
         *          "Accept": "application/json",
         *          "Access-Control-Allow-Origin": "https://api.asgardeo.io/myaccount",
         *          "Content-Type": "application/scim+json"
         *      },
         *      method: "GET",
         *      url: "https://api.asgardeo.io/scim2/me"
         *  };
         *
         *  return auth.httpRequest(requestConfig)
         *     .then((response) => {
         *           // console.log(response);
         *      })
         *      .catch((error) => {
         *           // console.error(error);
         *      });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#httprequest
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */httpRequest(e){var l;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(l=this._client)||void 0===l?void 0:l.httpRequest(e)}))}
/**
         * This method sends multiple API requests to a protected endpoint.
         * The access token is automatically attached to the header of the request.
         * This is the only way by which multiple requests can be sent to protected endpoints
         * when the web worker is used to store session information.
         *
         * @param {HttpRequestConfig[]} config -  The config object containing attributes necessary to send a request.
         *
         * @return {Promise<HttpResponse[]>} - Returns a Promise that resolves with the responses to the requests.
         *
         * @example
         * ```
         *  const requestConfig = {
         *      headers: {
         *          "Accept": "application/json",
         *          "Content-Type": "application/scim+json"
         *      },
         *      method: "GET",
         *      url: "https://api.asgardeo.io/scim2/me"
         *  };
         *
         *  const requestConfig2 = {
         *      headers: {
         *          "Accept": "application/json",
         *          "Content-Type": "application/scim+json"
         *      },
         *      method: "GET",
         *      url: "https://api.asgardeo.io/scim2/me"
         *  };
         *
         *  return auth.httpRequest([requestConfig, requestConfig2])
         *     .then((responses) => {
         *           response.forEach((response)=>{
         *              // console.log(response);
         *           });
         *      })
         *      .catch((error) => {
         *           // console.error(error);
         *      });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#httprequestall
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */httpRequestAll(e){var l;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(l=this._client)||void 0===l?void 0:l.httpRequestAll(e)}))}
/**
         * This method allows you to send a request with a custom grant.
         *
         * @param {CustomGrantRequestParams} config - The request parameters.
         *
         * @return {Promise<HttpResponse<any> | SignInResponse>} - A Promise that resolves with
         * the value returned by the custom grant request.
         *
         * @example
         * ```
         * auth.customGrant({
         *   attachToken: false,
         *   data: {
         *       client_id: "{{clientId}}",
         *       grant_type: "account_switch",
         *       scope: "{{scope}}",
         *       token: "{{token}}",
         *   },
         *   id: "account-switch",
         *   returnResponse: true,
         *   returnsSession: true,
         *   signInRequired: true
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#customgrant
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */requestCustomGrant(e){var l,i;return t(this,void 0,void 0,(function*(){if(e.signInRequired,yield this._validateMethod(),!e.id)return Promise.reject(new r("SPA-AUTH_CLIENT-RCG-NF01","The custom grant request id not found.","The id attribute of the custom grant config object passed as an argument should have a value."));const t=yield null===(l=this._client)||void 0===l?void 0:l.requestCustomGrant(e),n=this._onCustomGrant.get(e.id);return n&&n(null===(i=this._onCustomGrant)||void 0===i?void 0:i.get(e.id)),t}))}
/**
         * This method ends a user session. The access token is revoked and the session information is destroyed.
         *
         * **To fire a callback function after ending user session, use the `on()` method.**
         * **To learn more about the `on()` method:**
         * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}
         *
         * @return {Promise<boolean>} - A promise that resolves with `true` if the process is successful.
         *
         * @example
         * ```
         * auth.endUserSession();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#endusersession
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */revokeAccessToken(){var e;return t(this,void 0,void 0,(function*(){yield this._validateMethod();const t=yield null===(e=this._client)||void 0===e?void 0:e.revokeAccessToken();return this._onEndUserSession&&(yield this._onEndUserSession(t)),t}))}
/**
         * This method returns a Promise that resolves with an object containing the service endpoints.
         *
         * @return {Promise<ServiceResourcesType} - A Promise that resolves with an object containing the service endpoints.
         *
         * @example
         * ```
         * auth.getServiceEndpoints().then((endpoints) => {
         *      // console.log(endpoints);
         *  }).error((error) => {
         *      // console.error(error);
         *  });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getserviceendpoints
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getOIDCServiceEndpoints(){var e;return t(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(e=this._client)||void 0===e?void 0:e.getOIDCServiceEndpoints()}))}
/**
         * This methods returns the Axios http client.
         *
         * @return {HttpClientInstance} - The Axios HTTP client.
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getHttpClient(){if(this._client){if(this._storage!==e.Storage.WebWorker){return this._client.getHttpClient()}throw new r("SPA-AUTH_CLIENT-GHC-IV01","Http client cannot be returned.","The http client cannot be returned when the storage type is set to webWorker.")}throw new r("SPA-AUTH_CLIENT-GHC-NF02","The SDK is not initialized.","The SDK has not been initialized yet. Initialize the SDK using the initialize method before calling this method.")}
/**
         * This method decodes the payload of the id token and returns it.
         *
         * @return {Promise<DecodedIdTokenPayloadInterface>} - A Promise that resolves with
         * the decoded payload of the id token.
         *
         * @example
         * ```
         * auth.getDecodedIDToken().then((response)=>{
         *     // console.log(response);
         * }).catch((error)=>{
         *     // console.error(error);
         * });
         * ```
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getdecodedidtoken
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getDecodedIDToken(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.getDecodedIDToken()}))}
/**
         * This method returns the CryptoHelper instance.
         *
         * @return {Promise<DecodedIdTokenPayloadInterface>} - A Promise that resolves with
         * the CryptoHelper instance.
         *
         * @example
         * ```
         * auth.getCryptoHelper().then((response)=>{
         *     // console.log(response);
         * }).catch((error)=>{
         *     // console.error(error);
         * });
         * ```
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getCryptoHelper
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getCryptoHelper(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.getCryptoHelper()}))}
/**
         * This method return the ID token.
         *
         * @return {Promise<string>} - A Promise that resolves with the ID token.
         *
         * @example
         * ```
         * const idToken = await auth.getIDToken();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getIDToken
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getIDToken(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.getIDToken()}))}
/**
         * This method return a Promise that resolves with the access token.
         *
         * **This method will not return the access token if the storage type is set to `webWorker`.**
         *
         * @return {Promise<string>} - A Promise that resolves with the access token.
         *
         * @example
         * ```
         *   auth.getAccessToken().then((token) => {
         *       // console.log(token);
         *   }).catch((error) => {
         *       // console.error(error);
         *   });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getaccesstoken
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getAccessToken(){return t(this,void 0,void 0,(function*(){if(yield this._validateMethod(),this._storage&&[(e.Storage.WebWorker,e.Storage.BrowserMemory)].includes(this._storage))return Promise.reject(new r("SPA-AUTH_CLIENT-GAT-IV01","The access token cannot be returned.","The access token cannot be returned when the storage type is set to webWorker or browserMemory."));return this._client.getAccessToken()}))}
/**
         * This method return a Promise that resolves with the idp access token.
         *
         * **This method will not return the access token if the storage type is set to `webWorker`.**
         *
         * @return {Promise<string>} - A Promise that resolves with the idp access token.
         *
         * @example
         * ```
         *   auth.getIDPAccessToken().then((token) => {
         *       // console.log(token);
         *   }).catch((error) => {
         *       // console.error(error);
         *   });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getaccesstoken
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getIDPAccessToken(){return t(this,void 0,void 0,(function*(){if(yield this._validateMethod(),this._storage&&[(e.Storage.WebWorker,e.Storage.BrowserMemory)].includes(this._storage))return Promise.reject(new r("SPA-AUTH_CLIENT-GIAT-IV01","The access token cannot be returned.","The access token cannot be returned when the storage type is set to webWorker or browserMemory."));return this._client.getAccessToken()}))}
/**
         * This method return a Promise that resolves with the data layer object.
         *
         * **This method will not return the data layer object, if the storage type is set to `webWorker`.**
         *
         * @return {Promise<string>} - A Promise that resolves with the data layer object.
         *
         * @example
         * ```
         *   auth.getDataLayer().then((dataLayer) => {
         *       // console.log(dataLayer);
         *   }).catch((error) => {
         *       // console.error(error);
         *   });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getdatalayer
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getDataLayer(){return t(this,void 0,void 0,(function*(){if(yield this._validateMethod(),this._storage&&[(e.Storage.WebWorker,e.Storage.BrowserMemory)].includes(this._storage))return Promise.reject(new r("SPA-AUTH_CLIENT-GDL-IV01","The data layer cannot be returned.","The data layer cannot be returned when the storage type is set to webWorker or browserMemory."));return this._client.getDataLayer()}))}
/**
         * This method refreshes the access token.
         *
         * @return {TokenResponseInterface} - A Promise that resolves with an object containing
         * information about the refreshed access token.
         *
         * @example
         * ```
         * auth.refreshToken().then((response)=>{
         *      // console.log(response);
         * }).catch((error)=>{
         *      // console.error(error);
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#refreshtoken
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */refreshAccessToken(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.refreshAccessToken()}))}
/**
         * This method specifies if the user is authenticated or not.
         *
         * @return {Promise<boolean>} - A Promise that resolves with `true` if the user is authenticated.
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */isAuthenticated(){var e;return t(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(e=this._client)||void 0===e?void 0:e.isAuthenticated()}))}on(l,i,n){var d,o,c,a;return t(this,void 0,void 0,(function*(){if(yield this._isInitialized(),!i||"function"!=typeof i)throw new r("SPA-AUTH_CLIENT-ON-IV02","Invalid callback function.","The provided callback function is invalid.");switch(l){case e.Hooks.SignIn:this._onSignInCallback=i;break;case e.Hooks.SignOut:this._onSignOutCallback=i,(yield me.isSignOutSuccessful())&&this._onSignOutCallback();break;case e.Hooks.RevokeAccessToken:this._onEndUserSession=i;break;case e.Hooks.Initialize:this._onInitialize=i;break;case e.Hooks.HttpRequestError:null===(d=this._client)||void 0===d||d.setHttpRequestErrorCallback(i);break;case e.Hooks.HttpRequestFinish:null===(o=this._client)||void 0===o||o.setHttpRequestFinishCallback(i);break;case e.Hooks.HttpRequestStart:null===(c=this._client)||void 0===c||c.setHttpRequestStartCallback(i);break;case e.Hooks.HttpRequestSuccess:null===(a=this._client)||void 0===a||a.setHttpRequestSuccessCallback(i);break;case e.Hooks.CustomGrant:n&&this._onCustomGrant.set(n,i);break;case e.Hooks.SignOutFailed:{this._onSignOutFailedCallback=i;const e=me.didSignOutFail();e&&this._onSignOutFailedCallback(e);break}default:throw new r("SPA-AUTH_CLIENT-ON-IV01","Invalid hook.","The provided hook is invalid.")}}))}
/**
         * This method enables callback functions attached to the http client.
         *
         * @return {Promise<boolean>} - A promise that resolves with True.
         *
         * @example
         * ```
         * auth.enableHttpHandler();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#enableHttpHandler
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */enableHttpHandler(){var e;return t(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(e=this._client)||void 0===e?void 0:e.enableHttpHandler()}))}
/**
         * This method disables callback functions attached to the http client.
         *
         * @return {Promise<boolean>} - A promise that resolves with True.
         *
         * @example
         * ```
         * auth.disableHttpHandler();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#disableHttpHandler
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */disableHttpHandler(){var e;return t(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(e=this._client)||void 0===e?void 0:e.disableHttpHandler()}))}
/**
         * This method updates the configuration that was passed into the constructor when instantiating this class.
         *
         * @param {Partial<AuthClientConfig<T>>} config - A config object to update the SDK configurations with.
         *
         * @example
         * ```
         * const config = {
         *     signInRedirectURL: "http://localhost:3000/sign-in",
         *     clientID: "client ID",
         *     baseUrl: "https://api.asgardeo.io"
         * }
         * const auth.updateConfig(config);
         * ```
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master/lib#updateConfig
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */updateConfig(l){return t(this,void 0,void 0,(function*(){if(yield this._isInitialized(),this._storage===e.Storage.WebWorker){const e=this._client;yield e.updateConfig(l)}else{const e=this._client;yield e.updateConfig(l)}}))}}An._instances=new Map;class zn extends Worker{constructor(){super(...arguments),this.onmessage=()=>null}}e.AUTHORIZATION_CODE=d,e.AsgardeoAuthClient=p,e.AsgardeoAuthException=r,e.AsgardeoSPAClient=An,e.AuthenticationHelper=ue,e.AuthenticationUtils=u,e.CLAIM_VALIDATION_ERROR="ERR_JWT_CLAIM_VALIDATION_FAILED",e.CLIENT_ID_TAG="{{clientID}}",e.CLIENT_SECRET_TAG="{{clientSecret}}",e.CryptoHelper=h,e.DataLayer=I,e.MainThreadClient=Ln,e.NBF_CLAIM="nbf",e.OIDC_SCOPE="openid",e.PKCE_CODE_VERIFIER="pkce_code_verifier",e.PKCE_SEPARATOR="#",e.REFRESH_TOKEN_TIMER=i,e.SCOPE_TAG="{{scope}}",e.SESSION_STATE=o,e.SIGN_OUT_SUCCESS_PARAM=a,e.SIGN_OUT_URL=c,e.SPAHelper=be,e.SPAUtils=me,e.STATE=s,e.SUPPORTED_SIGNATURE_ALGORITHMS=n,e.TOKEN_TAG="{{token}}",e.USERNAME_TAG="{{username}}",e.WebWorkerClass=zn,e.WebWorkerClient=Tn,e.workerReceiver=e=>{const l=self;let i;l.onmessage=({data:l,ports:a})=>t(void 0,void 0,void 0,(function*(){var Z,u,b,h;const m=a[0];if(l.type===R||i)switch(l.type){case R:try{const a=Object.assign({},l.data);i=yield((e,l)=>t(void 0,void 0,void 0,(function*(){const i=new Kl,n=new Un,d=new p(i,n);yield d.initialize(e);const c=new be(d),a=l(d,c),Z=d.getDataLayer(),r=Yl.getInstance();return(null==r?void 0:r.init)&&(yield r.init(!0,(e=>t(void 0,void 0,void 0,(function*(){const t=Object.assign({attachToken:!0},e);t.attachToken&&(t.shouldAttachIDPAccessToken?e.headers=Object.assign(Object.assign({},e.headers),{Authorization:`Bearer ${yield a.getIDPAccessToken()}`}):e.headers=Object.assign(Object.assign({},e.headers),{Authorization:`Bearer ${yield a.getAccessToken()}`}))}))))),{disableHttpHandler:()=>{a.disableHttpHandler(r)},enableHttpHandler:()=>{a.enableHttpHandler(r)},getAccessToken:()=>a.getAccessToken(),getAuthorizationURL:e=>t(void 0,void 0,void 0,(function*(){return d.getAuthorizationURL(e).then((e=>t(void 0,void 0,void 0,(function*(){var t;const l=null!==(t=new URL(e).searchParams.get(s))&&void 0!==t?t:"",i=yield d.getPKCECode(l);return{authorizationURL:e,pkce:i}})))).catch((e=>Promise.reject(e)))})),getBasicUserInfo:()=>t(void 0,void 0,void 0,(function*(){return a.getBasicUserInfo()})),getConfigData:()=>t(void 0,void 0,void 0,(function*(){return Z.getConfigData()})),getCryptoHelper:()=>t(void 0,void 0,void 0,(function*(){return a.getCryptoHelper()})),getDecodedIDPIDToken:()=>t(void 0,void 0,void 0,(function*(){return a.getDecodedIDPIDToken()})),getDecodedIDToken:()=>t(void 0,void 0,void 0,(function*(){return a.getDecodedIDToken()})),getIDToken:()=>t(void 0,void 0,void 0,(function*(){return a.getIDToken()})),getOIDCServiceEndpoints:()=>t(void 0,void 0,void 0,(function*(){return a.getOIDCServiceEndpoints()})),getSignOutURL:()=>t(void 0,void 0,void 0,(function*(){return yield d.getSignOutURL()})),httpRequest:e=>t(void 0,void 0,void 0,(function*(){return yield a.httpRequest(r,e)})),httpRequestAll:e=>t(void 0,void 0,void 0,(function*(){return yield a.httpRequestAll(e,r)})),isAuthenticated:()=>a.isAuthenticated(),refreshAccessToken:()=>t(void 0,void 0,void 0,(function*(){try{return yield a.refreshAccessToken()}catch(e){return Promise.reject(e)}})),requestAccessToken:(e,l,i,n)=>t(void 0,void 0,void 0,(function*(){return yield a.requestAccessToken(e,l,void 0,i,n)})),requestCustomGrant:e=>t(void 0,void 0,void 0,(function*(){return yield a.requestCustomGrant(e)})),revokeAccessToken:()=>d.revokeAccessToken().then((()=>(c.clearRefreshTokenTimeout(),Promise.resolve(!0)))).catch((e=>Promise.reject(e))),setHttpRequestFinishCallback:e=>{(null==r?void 0:r.setHttpRequestFinishCallback)&&r.setHttpRequestFinishCallback(e)},setHttpRequestStartCallback:e=>{(null==r?void 0:r.setHttpRequestStartCallback)&&r.setHttpRequestStartCallback(e)},setHttpRequestSuccessCallback:e=>{(null==r?void 0:r.setHttpRequestSuccessCallback)&&r.setHttpRequestSuccessCallback(e)},setSessionState:e=>t(void 0,void 0,void 0,(function*(){yield Z.setSessionDataParameter(o,e)})),signOut:()=>t(void 0,void 0,void 0,(function*(){return c.clearRefreshTokenTimeout(),yield d.getSignOutURL()})),startAutoRefreshToken:()=>t(void 0,void 0,void 0,(function*(){c.clearRefreshTokenTimeout(),c.refreshAccessTokenAutomatically(a)})),updateConfig:e=>t(void 0,void 0,void 0,(function*(){yield d.updateConfig(e)}))}})))(a,e),i.setHttpRequestFinishCallback(c),i.setHttpRequestStartCallback(n),i.setHttpRequestSuccessCallback(d),m.postMessage(he.generateSuccessMessage())}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case A:i.getAuthorizationURL(null==l?void 0:l.data).then((e=>{m.postMessage(he.generateSuccessMessage(e))})).catch((e=>{m.postMessage(he.generateFailureMessage(e))}));break;case z:i.requestAccessToken(null===(Z=null==l?void 0:l.data)||void 0===Z?void 0:Z.code,null===(u=null==l?void 0:l.data)||void 0===u?void 0:u.sessionState,null===(b=null==l?void 0:l.data)||void 0===b?void 0:b.pkce,null===(h=null==l?void 0:l.data)||void 0===h?void 0:h.state).then((e=>{m.postMessage(he.generateSuccessMessage(e))})).catch((e=>{m.postMessage(he.generateFailureMessage(e))}));break;case Y:i.httpRequest(l.data).then((e=>{m.postMessage(he.generateSuccessMessage(e))})).catch((e=>{m.postMessage(he.generateFailureMessage(e))}));break;case v:i.httpRequestAll(l.data).then((e=>{m.postMessage(he.generateSuccessMessage(e))})).catch((e=>{m.postMessage(he.generateFailureMessage(e))}));break;case S:try{m.postMessage(he.generateSuccessMessage(yield i.signOut()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case K:i.requestCustomGrant(l.data).then((e=>{m.postMessage(he.generateSuccessMessage(e))})).catch((e=>{m.postMessage(he.generateFailureMessage(e))}));break;case N:i.revokeAccessToken().then((e=>{m.postMessage(he.generateSuccessMessage(e))})).catch((e=>{m.postMessage(he.generateFailureMessage(e))}));break;case k:try{m.postMessage(he.generateSuccessMessage(yield i.getOIDCServiceEndpoints()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case U:try{m.postMessage(he.generateSuccessMessage(yield i.getBasicUserInfo()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case L:try{m.postMessage(he.generateSuccessMessage(yield i.getDecodedIDToken()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case T:try{m.postMessage(he.generateSuccessMessage(yield i.getCryptoHelper()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case E:try{m.postMessage(he.generateSuccessMessage(yield i.getIDToken()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case F:i.enableHttpHandler(),m.postMessage(he.generateSuccessMessage());break;case B:i.disableHttpHandler(),m.postMessage(he.generateSuccessMessage());break;case w:try{m.postMessage(he.generateSuccessMessage(yield i.isAuthenticated()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case x:try{m.postMessage(he.generateSuccessMessage(yield i.getSignOutURL()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case P:try{m.postMessage(he.generateSuccessMessage(yield i.refreshAccessToken()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case M:try{m.postMessage(he.generateSuccessMessage(i.startAutoRefreshToken()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case Q:try{m.postMessage(he.generateSuccessMessage(yield i.setSessionState(null==l?void 0:l.data)))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case j:try{m.postMessage(he.generateSuccessMessage(yield i.updateConfig(null==l?void 0:l.data)))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;case _:try{m.postMessage(he.generateSuccessMessage(yield i.getConfigData()))}catch(e){m.postMessage(he.generateFailureMessage(e))}break;default:null==m||m.postMessage(he.generateFailureMessage(new r("SPA-CLIENT_WORKER-ONMSG-IV02","The message type is invalid.",`The message type provided, ${l.type}, is invalid.`)))}else m.postMessage(he.generateFailureMessage(new r("SPA-CLIENT_WORKER-ONMSG-NF01","The web worker has not been initialized yet.","The initialize method needs to be called before the specified operation can be carried out.")))}));const n=()=>{l.postMessage({type:J})},d=e=>{l.postMessage({data:JSON.stringify(null!=e?e:""),type:H})},c=()=>{l.postMessage({type:f})}},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=asgardeo-spa.production.js.map
